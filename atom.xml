<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>翼叶知秋</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.chentyit.com/"/>
  <updated>2019-09-15T03:51:13.612Z</updated>
  <id>https://www.chentyit.com/</id>
  
  <author>
    <name>Chen Tianyi</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Zookeeper安装和Hadoop安装</title>
    <link href="https://www.chentyit.com/2019/09/15/Zookeeper%E5%AE%89%E8%A3%85%E5%92%8CHadoop%E5%AE%89%E8%A3%85/"/>
    <id>https://www.chentyit.com/2019/09/15/Zookeeper安装和Hadoop安装/</id>
    <published>2019-09-15T03:44:51.000Z</published>
    <updated>2019-09-15T03:51:13.612Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Zookeeper-安装"><a href="#Zookeeper-安装" class="headerlink" title="Zookeeper 安装"></a>Zookeeper 安装</h2><p><strong>关闭防火墙！！！</strong></p><h3 id="下载-JDK-1-8-版本"><a href="#下载-JDK-1-8-版本" class="headerlink" title="下载 JDK 1.8 版本"></a>下载 JDK 1.8 版本</h3><h3 id="下载-Zookeeper-安装包"><a href="#下载-Zookeeper-安装包" class="headerlink" title="下载 Zookeeper 安装包"></a>下载 Zookeeper 安装包</h3><p><a href="https://zookeeper.apache.org/releases.html" target="_blank" rel="noopener">下载链接</a></p><h3 id="解压到-Linux-的路径下（一般是-usr-local-）"><a href="#解压到-Linux-的路径下（一般是-usr-local-）" class="headerlink" title="解压到 Linux 的路径下（一般是 /usr/local ）"></a>解压到 Linux 的路径下（一般是 /usr/local ）</h3><h3 id="配置-Linux-环境变量"><a href="#配置-Linux-环境变量" class="headerlink" title="配置 Linux 环境变量"></a>配置 Linux 环境变量</h3><p>配置 JAVA_HOME 和 ZOOKEERER_HOME</p><h3 id="配置-Zookeeper-单节点"><a href="#配置-Zookeeper-单节点" class="headerlink" title="配置  Zookeeper 单节点"></a>配置  Zookeeper 单节点</h3><ol><li><p>在 zookeeper 文件夹下创建 data 文件夹和 logs 文件夹，用于存放数据和日志</p></li><li><p>进入 conf 中，将 zoo_sample.cfg 复制一份并重命名为 zoo.cfg</p></li><li><p>配置 zoo.fg</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tickTime=2000</span><br><span class="line">dataLogDir=/usr/local/zookeeper*/logs</span><br><span class="line">dataDir=/usr/local/zookeeper*/data</span><br><span class="line">clientPort=2181</span><br></pre></td></tr></table></figure></li><li><p>配置完成后即可开启单节点模式</p></li></ol><h3 id="配置-Zookeeper-多节点模式（分布式）"><a href="#配置-Zookeeper-多节点模式（分布式）" class="headerlink" title="配置 Zookeeper 多节点模式（分布式）"></a>配置 Zookeeper 多节点模式（分布式）</h3><ol><li><p>先多搞几台虚拟机（具体多少台开心就好，最好 3 台起步，之后用 scp 复制文件到其他虚拟机）</p></li><li><p>配置 hosts 文件</p></li><li><p>配置 ssh 免密登录</p></li><li><p>给所有虚拟机搞上 JDK 和 Zookeeper</p></li><li><p>每台虚拟机的 Zookeeper 的目录下创建 data 和 logs 目录</p></li><li><p>配置 zoo.cfg（和单节点一样搞出来的）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">tickTime=2000</span><br><span class="line">dataDir=/var/lib/zookeeper</span><br><span class="line">clientPort=2181</span><br><span class="line">initLimit=5</span><br><span class="line">syncLimit=2</span><br><span class="line"><span class="meta">#</span> 主机名、心跳端口、数据端口</span><br><span class="line">server.1=zoo1:2888:3888</span><br><span class="line">server.2=zoo2:2888:3888</span><br><span class="line">server.3=zoo3:2888:3888</span><br></pre></td></tr></table></figure></li><li><p>给每个节点加上 myid（myid 是放到 zookeeper 配置的 dataDir 的路径下的）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">iweb5 ： echo '1'&gt;/usr/local/zookeeper/data/myid</span><br><span class="line">iweb6 ： echo '2'&gt;/usr/local/zookeeper/data/myid</span><br><span class="line">iweb7 ： echo '3'&gt;/usr/local/zookeeper/data/myid</span><br></pre></td></tr></table></figure></li><li><p>最后就可以启动集群了</p></li></ol><h2 id="Hadoop-安装"><a href="#Hadoop-安装" class="headerlink" title="Hadoop 安装"></a>Hadoop 安装</h2><p><strong>关闭防火墙！！！</strong></p><p>这玩意儿环境配置老费劲了</p><p>直接跳过单节点模式，要是 hadoop 玩单节点就没有必要搞集群了</p><p><strong>PS：</strong>Hadoop 是在 Zookeeper 环境配置好了的基础上安装的</p><h3 id="JDK-环境变量-SSH-免密-hosts-文件配置"><a href="#JDK-环境变量-SSH-免密-hosts-文件配置" class="headerlink" title="JDK || 环境变量 || SSH 免密 || hosts 文件配置"></a>JDK || 环境变量 || SSH 免密 || hosts 文件配置</h3><p>这里要把 HADOOP_HOME 配置进去，添加到 PATH 里面的时候要把 /bin 和 /sbin 都配置进去</p><h3 id="架设虚拟机（实验用的两台，加上-Zookeeper-一共-5-台）"><a href="#架设虚拟机（实验用的两台，加上-Zookeeper-一共-5-台）" class="headerlink" title="架设虚拟机（实验用的两台，加上 Zookeeper 一共 5 台）"></a>架设虚拟机（实验用的两台，加上 Zookeeper 一共 5 台）</h3><h3 id="开始配置-Hadoop"><a href="#开始配置-Hadoop" class="headerlink" title="开始配置 Hadoop"></a>开始配置 Hadoop</h3><ol><li><p>先配置 hadoop*/etc/hadoop/hadoop-env.sh，将里面的 ${JAVA_HOME} 改成当前 JAVA_HOME 的路径</p></li><li><p>配置 hadoop*/etc/hadoop/core-site.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 指定hdfs的ns为ns --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>fs.defaultF S<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>hdfs://ns<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!-- 指定hadoop临时目录 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.tmp.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>/usr/local/hadoop-2.8.4/tmp<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 指定zookeeper地址 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>ha.zookeeper.quorum<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>bigdata1:2181,bigdata2:2181,bigdata3:2181<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>配置 hadoop*/etc/hadoop/hdfs-site.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 指定HDFS副本的数量默认3个 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.replication<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>2<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--指定hdfs的nameservices为ns，需要和core-site.xml中的保持一致 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.nameservices<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>ns<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- ns下面有两个NameNode，分别是nn1，nn2 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.ha.namenodes.ns<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>nn1,nn2<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- nn1的RPC通信地址 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.rpc-address.ns.nn1<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>bigdata5:9000<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- namenode-1的http通信地址 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.http-address.ns.nn1<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>bigdata5:50070<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- namenode-2的RPC通信地址 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.rpc-address.ns.nn2<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>bigdata6:9000<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- namenode-2的http通信地址 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.http-address.ns.nn2<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>bigdata6:50070<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 指定NameNode的元数据在JournalNode上的存放位置 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.shared.edits.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>qjournal://bigdata1:8485;bigdata2:8485;bigdata3:8485/ns<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 指定JournalNode在本地磁盘存放数据的位置 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.journalnode.edits.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>/usr/local/hadoop-2.8.4/journaldata<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 开启NameNode失败自动切换 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.ha.automatic-failover.enabled<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置失败自动切换实现方式 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.client.failover.proxy.provider.ns<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置隔离机制方法，多个机制用换行分割，即每个机制暂用一行--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.ha.fencing.methods<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span></span><br><span class="line">            sshfence</span><br><span class="line">            shell(/bin/true)</span><br><span class="line">        <span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 使用sshfence隔离机制时需要ssh免登陆 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.ha.fencing.ssh.private-key-files<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>/root/.ssh/id_rsa<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 配置sshfence隔离机制超时时间 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.ha.fencing.ssh.connect-timeout<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>30000<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>配置 hadoop*/etc/hadoop/mapred-site.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 指定mr框架为yarn方式 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.framework.name<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>yarn<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>配置 hadoop*/etc/hadoop/yarn-site.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 开启RM高可用 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.ha.enabled<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 指定RM的cluster id --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.cluster-id<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>yrc<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 指定RM的名字 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.ha.rm-ids<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>rm1,rm2<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 分别指定RM的地址 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.hostname.rm1<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>bigdata5<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.hostname.rm2<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>bigdata6<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 指定zk集群地址 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.zk-address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>bigdata1:2181,bigdata2:2181,bigdata3:2181<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.aux-services<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>mapreduce_shuffle<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>hadoopMaster:8032<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.scheduler.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>hadoopMaster:8030<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.resource-tracker.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>hadoopMaster:8031<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="同步配置"><a href="#同步配置" class="headerlink" title="同步配置"></a>同步配置</h3><p>通过 scp 命令将 hadoop*/ 发送给所有主机</p><h3 id="集群启动准备工作（所有命令官方文档都有）"><a href="#集群启动准备工作（所有命令官方文档都有）" class="headerlink" title="集群启动准备工作（所有命令官方文档都有）"></a>集群启动准备工作（所有命令官方文档都有）</h3><ol><li><p>在 Zookeeper 的主机上启动 journalnode</p><p>（这里我必须要说一句，一定要先启动 journalnode，我就是忘记要启动 journalnode，最后耗费了我一个多小时才启动成功）</p></li><li><p>格式化 namenode （在 active 主机上执行）</p><p>hdfs namenode -format</p></li><li><p>格式化 zkfc（在 active 主机上执行）</p><p>hdfs zkfc -formatZK</p></li><li><p>启动 active 上的 namenode</p><p>hadoop-daemon.sh start namenode</p></li><li><p>在 standby 执行</p><p>hdfs namenode -bootstrapStandby</p></li><li><p>手动启动以下程序</p><p>[ hdfs ]</p><ul><li>namenode</li><li>zkfc</li><li>datanode</li></ul><p>[ yarn ]</p><ul><li>resourcemanager</li><li>nodemanager</li></ul></li><li><p>启动 Web 客户端查看信息</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Zookeeper-安装&quot;&gt;&lt;a href=&quot;#Zookeeper-安装&quot; class=&quot;headerlink&quot; title=&quot;Zookeeper 安装&quot;&gt;&lt;/a&gt;Zookeeper 安装&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;关闭防火墙！！！&lt;/strong&gt;&lt;/p&gt;

      
    
    </summary>
    
      <category term="大数据" scheme="https://www.chentyit.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="Zookeeper" scheme="https://www.chentyit.com/tags/Zookeeper/"/>
    
      <category term="Hadoop" scheme="https://www.chentyit.com/tags/Hadoop/"/>
    
  </entry>
  
  <entry>
    <title>Zookeeper概念</title>
    <link href="https://www.chentyit.com/2019/09/15/Zookeeper%E6%A6%82%E5%BF%B5/"/>
    <id>https://www.chentyit.com/2019/09/15/Zookeeper概念/</id>
    <published>2019-09-15T03:44:26.000Z</published>
    <updated>2019-09-15T03:49:18.493Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>分布式协调服务，为其他的分布式程序提供协调服务</p><p>本身就是分布式程序</p><p>提供的服务包含：</p><ul><li>主从协调</li><li>服务器节点动态上下线</li><li>统一配置管理</li><li>分布式共享锁</li><li>统一名称服务</li></ul><p>底层其实只包含两层服务</p><ul><li><strong>管理</strong>（存储和读取）用户程序提交的<strong>数据</strong></li><li>为用户程序<strong>提供</strong>数据节点<strong>监听服务</strong></li></ul><h2 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h2><ol><li>一个 leader，多个 follower 组成的集群</li><li>全局数据一致：每个 ZK 服务器的数据都是一致的，无论哪个客户端连接到 ZK，获得的数据都是一样的</li><li>分布式读写：更新请求转发，由 leader 实施</li><li>顺序执行：来自同一个客户的更新请求按照发送顺序执行</li><li>数据更新原子性：要么成功，要么失败</li><li>实时性：在一定时间范围内，客户端能得到最新的数据</li></ol><p><img src="/2019/09/15/Zookeeper概念/zkservice.jpg" alt="zkservice"></p><h2 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h2><ol><li>层次化结构，和文件系统差不多</li><li>每个节点叫做 znode，并且有唯一路径标识</li><li>每个 znode 可以包含数据和子节点（EPHEMERAL 不能有子节点，因为是短暂节点，连接断开后悔自己删除）</li><li>客户端可以在节点上设置监视器</li></ol><h2 id="Znode-节点类型"><a href="#Znode-节点类型" class="headerlink" title="Znode 节点类型"></a>Znode 节点类型</h2><ul><li>有两种节点类型<ol><li>短暂（EPHEMERAL）断开连接自己删除</li><li>持久（PERSISTENT）断开连接不删除</li></ol></li><li>org.apache.zookeeper.CreateMode中定义了<strong>四种节点类型</strong><ol><li>PERSISTENT：永久节点</li><li>EPHEMERAL：临时节点</li><li>PERSISTENT_SEQUENTIAL：永久节点、序列化</li><li>EPHEMERAL_SEQUENTIAL：临时节点、序列化</li></ol></li><li>创建 znode 是设置顺序表示，znode 名称后会附加一个值，顺序号是一个单调递增的计数器，由父节点维护，设置顺序是为了对所有事件进行全局排序，客户端就可以通过顺序推断事件的顺序</li></ul><h2 id="分布式共享锁"><a href="#分布式共享锁" class="headerlink" title="分布式共享锁"></a>分布式共享锁</h2><p><strong>作用：</strong>做到一次只有指定个数的客户端访问服务器的某些资源</p><p>实现步骤：</p><ol><li>客户端上线就向 ZK 注册，创建一把锁</li><li>判断是否只有一个客户端在工作，是则该客户端处理业务</li><li>获取父节点下注册的所有锁，判断自己是否是注册号码最小的，是则处理业务</li></ol><p><strong>当业务处理完成后必须要释放锁</strong></p><h2 id="ZooKeeper-中的时间"><a href="#ZooKeeper-中的时间" class="headerlink" title="ZooKeeper 中的时间"></a>ZooKeeper 中的时间</h2><ul><li><p>Zxid</p><p>致使 ZooKeeper 节点状态改变的每一个操作都将使节点接收到一个 zxid 格式的时间戳，并且<strong>这个时间戳全局有序</strong>。</p><ul><li>cZxid：是节点的<strong>创建时间</strong>所对应的 Zxid 格式时间戳。</li><li>mZxid：是节点的<strong>修改时间</strong>所对应的 Zxid 格式时间戳，与其子节点无关。</li><li>pZxid：<strong>该节点的子节点</strong>（或该节点）的最近一次 创建 / 删除 的修改时间所对应的 cZxid 格式时间戳（注：只与 本节点 / 该节点的子节点，有关；<strong>与孙子节点无关</strong></li></ul></li><li><p>版本号</p><p>对节点的每一个操作都将致使这个节点的版本号增加。每个节点维护着三个版本号，他们分别为：</p><ul><li>version 节点数据版本号</li><li>cversion 子节点版本号</li><li>aversion 节点所拥有的 ACL 版本号</li></ul></li></ul><h2 id="Zookeeper-投票机制"><a href="#Zookeeper-投票机制" class="headerlink" title="Zookeeper 投票机制"></a>Zookeeper 投票机制</h2><p>用例子比较直观（配置 3 台机器）：</p><p>每台机器的 “票” 结构：（myid，zxid）</p><ul><li><p>情况一</p><p>T1（1，0）    T2（2，0）    T3（3，0）</p><p>T1 启动给自己投一票</p><p>T2 启动给自己投一票，收到 T1 的票，并将自己的票发给 T1</p><p>—— 判断（如果 zxid 相同，则 myid 大的作为 leader）T2 作为 leader</p><p>T3 启动已经有 leader 了，不再参与选举直接指定 T2 作为leader</p></li><li><p>情况二</p><p>T1 （1，3）    T2（2，10）    T3（3，5）</p><p>T2 作为 leader 然后嗝屁了</p><p>T1 和 T3 选举</p><p>—— 判断（如果 zxid 不同，则直接判断 zxid，和 myid 无关）T3 作为 leader</p><p>T2 重新上线后由于 T3 已经是 leader，直接指定 T3 为 leader</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;分布式协调服务，为其他的分布式程序提供协调服务&lt;/p&gt;
&lt;p&gt;本身就是分布式程序&lt;/p&gt;
&lt;p&gt;提供的服务包含：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
      
    
    </summary>
    
      <category term="大数据" scheme="https://www.chentyit.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="Zookeeper" scheme="https://www.chentyit.com/tags/Zookeeper/"/>
    
  </entry>
  
  <entry>
    <title>MyBatis-Plus高级操作</title>
    <link href="https://www.chentyit.com/2019/09/11/MyBatis-Plus%E9%AB%98%E7%BA%A7%E6%93%8D%E4%BD%9C/"/>
    <id>https://www.chentyit.com/2019/09/11/MyBatis-Plus高级操作/</id>
    <published>2019-09-11T01:12:02.000Z</published>
    <updated>2019-09-11T07:25:59.331Z</updated>
    
    <content type="html"><![CDATA[<h2 id="推荐视频"><a href="#推荐视频" class="headerlink" title="推荐视频"></a>推荐视频</h2><p><a href="https://www.imooc.com/learn/1130" target="_blank" rel="noopener">MyBatis 入门教程</a></p><p><a href="https://www.imooc.com/learn/1171" target="_blank" rel="noopener">MyBatis 进阶教程</a></p><a id="more"></a><h2 id="逻辑删除"><a href="#逻辑删除" class="headerlink" title="逻辑删除"></a>逻辑删除</h2><h3 id="介绍："><a href="#介绍：" class="headerlink" title="介绍："></a>介绍：</h3><p>修改某一行的数据中的某一列的标志值，用值来表示是否已经 <strong>“逻辑删除”</strong> 并不是真的在表中真正的删除这条数据</p><ol><li><p>先在 application.yml 中配置标志值</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line"><span class="attr">  global-config:</span></span><br><span class="line"><span class="attr">    db-config:</span></span><br><span class="line">      <span class="comment"># 未删除的值</span></span><br><span class="line"><span class="attr">      logic-not-delete-value:</span> <span class="number">0</span></span><br><span class="line">      <span class="comment"># 已删除的值</span></span><br><span class="line"><span class="attr">      logic-delete-value:</span> <span class="number">1</span></span><br></pre></td></tr></table></figure></li><li><p>创建配置类 MyBatisPlusConfiguration.class</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBatisPlusConfiguration</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 在 mybatis-plus 3.1.0 以上的版本中不再需要添加这一步</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ISqlInjector <span class="title">sqlInjector</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> LogicSqlInjector();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在实体类中添加注解 @TableLogic</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@TableName</span>(<span class="string">"user_pro"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">    <span class="keyword">private</span> Long managerId;</span><br><span class="line">    <span class="keyword">private</span> LocalDateTime createTime;</span><br><span class="line">    <span class="keyword">private</span> LocalDateTime updateTime;</span><br><span class="line">    <span class="keyword">private</span> Integer version;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TableLogic</span></span><br><span class="line">    <span class="meta">@TableField</span>(select = <span class="keyword">false</span>, value = <span class="string">"deleted"</span>)</span><br><span class="line">    <span class="keyword">private</span> Integer deleted;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h3 id="使用："><a href="#使用：" class="headerlink" title="使用："></a>使用：</h3><p>这些方法在使用的时候都会自己在后面添加一个 and deleted = 0，表示只操作删除标志位为 0（未删除） 的数据</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.chentyit.mp2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.chentyit.mp2.dao.UserMapper;</span><br><span class="line"><span class="keyword">import</span> cn.chentyit.mp2.entity.User;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.junit.runner.RunWith;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.junit4.SpringRunner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Chentyit</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019/9/11 09:22</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RunWith</span>(SpringRunner.class)</span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyLogicDelete</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 会把删除标志位置 1</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteById</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> rows = userMapper.deleteById(<span class="number">1094592041087729666L</span>);</span><br><span class="line">        System.out.println(<span class="string">"影响行数："</span> + rows);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 只查询出删除标志位为 0 的数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">select</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        List&lt;User&gt; users = userMapper.selectList(<span class="keyword">null</span>);</span><br><span class="line">        users.forEach(System.out::println);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 只更新标志位为 0 的数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateById</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        user.setAge(<span class="number">26</span>);</span><br><span class="line">        user.setId(<span class="number">1088248166370832385L</span>);</span><br><span class="line">        <span class="keyword">int</span> rows = userMapper.updateById(user);</span><br><span class="line">        System.out.println(<span class="string">"影响行数："</span> + rows);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="自动填充"><a href="#自动填充" class="headerlink" title="自动填充"></a>自动填充</h2><h3 id="介绍：-1"><a href="#介绍：-1" class="headerlink" title="介绍："></a>介绍：</h3><p>自动填充值以及一些额外的数据</p><h3 id="实现："><a href="#实现：" class="headerlink" title="实现："></a>实现：</h3><ol><li><p>先在实体类中添加注解 @TableField(fill = FieldFill.INSERT) 和 @TableField(fill = FieldFill.UPDATE)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@TableName</span>(<span class="string">"user_pro"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Long managerId;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TableField</span>(fill = FieldFill.INSERT)</span><br><span class="line">    <span class="keyword">private</span> LocalDateTime createTime;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TableField</span>(fill = FieldFill.UPDATE)</span><br><span class="line">    <span class="keyword">private</span> LocalDateTime updateTime;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer version;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TableLogic</span></span><br><span class="line">    <span class="meta">@TableField</span>(select = <span class="keyword">false</span>, value = <span class="string">"deleted"</span>)</span><br><span class="line">    <span class="keyword">private</span> Integer deleted;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>实现 MetaObjectHandler 接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Chentyit</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019/9/11 10:13</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyMetaObjectHandler</span> <span class="keyword">implements</span> <span class="title">MetaObjectHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 在插入的时候填充</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> metaObject</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insertFill</span><span class="params">(MetaObject metaObject)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 判断数据库中是否有这个列</span></span><br><span class="line">        <span class="keyword">boolean</span> hasSetter = metaObject.hasSetter(<span class="string">"createTime1"</span>);</span><br><span class="line">        <span class="comment">// 如果有就向这个列插入数据</span></span><br><span class="line">        <span class="comment">// 如果没有就不插</span></span><br><span class="line">        <span class="keyword">if</span> (hasSetter) &#123;</span><br><span class="line">            setInsertFieldValByName(<span class="string">"createTime"</span>, LocalDateTime.now(), metaObject);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 在更新的时候填充</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> metaObject</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateFill</span><span class="params">(MetaObject metaObject)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 判断是否已经设置了值</span></span><br><span class="line">        Object val = getFieldValByName(<span class="string">"updateTime"</span>, metaObject);</span><br><span class="line">        <span class="comment">// 如果设置了就不进行自动填充</span></span><br><span class="line">        <span class="keyword">if</span> (val == <span class="keyword">null</span>) &#123;</span><br><span class="line">            setUpdateFieldValByName(<span class="string">"updateTime"</span>, LocalDateTime.now(), metaObject);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Chentyit</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019/9/11 10:39</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RunWith</span>(SpringRunner.class)</span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FillTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insert</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        user.setName(<span class="string">"陈天翼"</span>);</span><br><span class="line">        user.setAge(<span class="number">21</span>);</span><br><span class="line">        user.setEmail(<span class="string">"chentyit@qq.com"</span>);</span><br><span class="line">        user.setManagerId(<span class="number">1088248166370832385L</span>);</span><br><span class="line">        <span class="keyword">int</span> rows = userMapper.insert(user);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"影响行数："</span> + rows);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateById</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        user.setAge(<span class="number">27</span>);</span><br><span class="line">        user.setId(<span class="number">1171615225418350594L</span>);</span><br><span class="line">        <span class="keyword">int</span> rows = userMapper.updateById(user);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"影响行数："</span> + rows);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="乐观锁插件"><a href="#乐观锁插件" class="headerlink" title="乐观锁插件"></a>乐观锁插件</h2><p>（注：多写的情况下使用悲观锁，多读的场景使用乐观锁）</p><h3 id="介绍：-2"><a href="#介绍：-2" class="headerlink" title="介绍："></a>介绍：</h3><p>取出记录时，获取当前 version</p><p>更新时，带上这个 version</p><p>版本正确更新成功，错误更新失败</p><h3 id="使用：-1"><a href="#使用：-1" class="headerlink" title="使用："></a>使用：</h3><ol><li><p>添加插件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBatisPlusConfiguration</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加乐观锁插件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> OptimisticLockerInterceptor <span class="title">optimisticLockerInterceptor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> OptimisticLockerInterceptor();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在实体类中的版本属性上面添加 @Verison</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@TableName</span>(<span class="string">"user_pro"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="comment">// ****</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Version</span></span><br><span class="line">    <span class="keyword">private</span> Integer version;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// ****</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Chentyit</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019/9/11 11:16</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@RunWith</span>(SpringRunner.class)</span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OptTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Resource</span></span><br><span class="line">    <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 如果使用条件构造器 则添加构造器不能复用</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateById</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> version = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        user.setEmail(<span class="string">"chentyit2@qq.com"</span>);</span><br><span class="line">        user.setId(<span class="number">1171617683297271809L</span>);</span><br><span class="line">        user.setVersion(version);</span><br><span class="line">        <span class="keyword">int</span> rows = userMapper.updateById(user);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"影响行数："</span> + rows);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="性能分析插件"><a href="#性能分析插件" class="headerlink" title="性能分析插件"></a>性能分析插件</h2><h3 id="介绍：-3"><a href="#介绍：-3" class="headerlink" title="介绍："></a>介绍：</h3><p>输出每条 SQL 语句的执行时间，只在测试和开发环境使用，因为开销很大</p><h3 id="使用：-2"><a href="#使用：-2" class="headerlink" title="使用："></a>使用：</h3><ol><li><p>在配置类中添加性能分析插件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBatisPlusConfiguration</span> </span>&#123;</span><br><span class="line">    <span class="comment">// ******</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加性能分析插件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@Profile</span>(&#123;<span class="string">"dev"</span>, <span class="string">"test"</span>&#125;)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> PerformanceInterceptor <span class="title">performanceInterceptor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        PerformanceInterceptor performanceInterceptor = <span class="keyword">new</span> PerformanceInterceptor();</span><br><span class="line">        <span class="comment">// 格式化 SQL 语句</span></span><br><span class="line">        performanceInterceptor.setFormat(<span class="keyword">true</span>);</span><br><span class="line">        <span class="comment">// 设置执行最大时间</span></span><br><span class="line">        performanceInterceptor.setMaxTime(<span class="number">5</span>);</span><br><span class="line">        <span class="keyword">return</span> performanceInterceptor;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>配置 JVM 参数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 表示使用开发环境</span></span><br><span class="line">-Dspring.profiles.active=dev</span><br></pre></td></tr></table></figure></li></ol><h3 id="执行-SQL-分析打印"><a href="#执行-SQL-分析打印" class="headerlink" title="执行 SQL 分析打印"></a>执行 SQL 分析打印</h3><ol><li><p>先添加依赖包</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>p6spy<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>p6spy<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.8.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>修改配置文件</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">driver-class-name:</span> <span class="string">com.p6spy.engine.spy.P6SpyDriver</span></span><br><span class="line"><span class="attr">url:</span> <span class="attr">jdbc:p6spy:mysql://127.0.0.1:3306/mp?characterEncoding=utf8&amp;useSSL=true&amp;serverTimezone=Asia/Shanghai</span></span><br></pre></td></tr></table></figure></li><li><p>添加配置文件 spy.properties</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">module.log=com.p6spy.engine.logging.P6LogFactory,com.p6spy.engine.outage.P6OutageFactory</span><br><span class="line"># 自定义日志打印</span><br><span class="line">logMessageFormat=com.baomidou.mybatisplus.extension.p6spy.P6SpyLogger</span><br><span class="line"># 日志输出到控制台</span><br><span class="line">appender=com.baomidou.mybatisplus.extension.p6spy.StdoutLogger</span><br><span class="line"># 使用日志系统记录 sql</span><br><span class="line">#appender=com.p6spy.engine.spy.appender.Slf4JLogger</span><br><span class="line"># 设置 p6spy driver 代理</span><br><span class="line">deregisterdrivers=true</span><br><span class="line"># 取消JDBC URL前缀</span><br><span class="line">useprefix=true</span><br><span class="line"># 配置记录 Log 例外,可去掉的结果集有error,info,batch,debug,statement,commit,rollback,result,resultset.</span><br><span class="line">excludecategories=info,debug,result,batch,resultset</span><br><span class="line"># 日期格式</span><br><span class="line">dateformat=yyyy-MM-dd HH:mm:ss</span><br><span class="line"># 实际驱动可多个</span><br><span class="line">#driverlist=org.h2.Driver</span><br><span class="line"># 是否开启慢SQL记录</span><br><span class="line">outagedetection=true</span><br><span class="line"># 慢SQL记录标准 2 秒</span><br><span class="line">outagedetectioninterval=2</span><br></pre></td></tr></table></figure></li></ol><h3 id="修改日志输出路径"><a href="#修改日志输出路径" class="headerlink" title="修改日志输出路径"></a>修改日志输出路径</h3><ol><li><p>先修改配置文件 spy.properties</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 日志输出到控制台</span><br><span class="line"># appender=com.baomidou.mybatisplus.extension.p6spy.StdoutLogger</span><br></pre></td></tr></table></figure></li><li><p>再添加参数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">logfile=log.log</span><br></pre></td></tr></table></figure></li></ol><p>日志就会打印到 log.log 文件里面了</p><h2 id="多租户"><a href="#多租户" class="headerlink" title="多租户"></a>多租户</h2><h3 id="介绍：-4"><a href="#介绍：-4" class="headerlink" title="介绍："></a>介绍：</h3><p>多个用户间使用同一套程序，但每个用户之间实现数据隔离</p><h3 id="实现：-1"><a href="#实现：-1" class="headerlink" title="实现："></a>实现：</h3><ol><li><p>添加分页插件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Chentyit</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019/9/11 09:18</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBatisPlusConfiguration</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// **********</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加分页插件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> PaginationInterceptor <span class="title">paginationInterceptor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        PaginationInterceptor paginationInterceptor = <span class="keyword">new</span> PaginationInterceptor();</span><br><span class="line"></span><br><span class="line">        ArrayList&lt;ISqlParser&gt; sqlParserList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        TenantSqlParser tenantSqlParser = <span class="keyword">new</span> TenantSqlParser();</span><br><span class="line">        tenantSqlParser.setTenantHandler(<span class="keyword">new</span> TenantHandler() &#123;</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 添加租户信息的值</span></span><br><span class="line"><span class="comment">             * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> Expression <span class="title">getTenantId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> LongValue(<span class="number">1088248166370832385L</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 哪个字段添加信息</span></span><br><span class="line"><span class="comment">             * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> String <span class="title">getTenantIdColumn</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="string">"manager_id"</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 是否向某个表中添加租户信息</span></span><br><span class="line"><span class="comment">             * <span class="doctag">@param</span> tableName</span></span><br><span class="line"><span class="comment">             * <span class="doctag">@return</span> true 表示过滤掉，不增加； false 表示不过滤，添加租户信息</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">doTableFilter</span><span class="params">(String tableName)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="string">"user_pro"</span>.equals(tableName)) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        sqlParserList.add(tenantSqlParser);</span><br><span class="line">        paginationInterceptor.setSqlParserList(sqlParserList);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> paginationInterceptor;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="特定-SQL-过滤"><a href="#特定-SQL-过滤" class="headerlink" title="特定 SQL 过滤"></a>特定 SQL 过滤</h3><ul><li><p>方法一：在上面的代码中添加以下代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">paginationInterceptor.setSqlParserFilter(<span class="keyword">new</span> ISqlParserFilter() &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 是否执行过滤</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> metaObject</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> false 代表不增加过滤信息；true 代表增加过滤信息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">doFilter</span><span class="params">(MetaObject metaObject)</span> </span>&#123;</span><br><span class="line">        MappedStatement ms = SqlParserHelper.getMappedStatement(metaObject);</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">"cn.chentyit.mp2.dao.UserMapper.selectById"</span>.equals(ms.getId())) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>方法二：在 Mapper 的自定义方法上添加注解 @SqlParser(filter = true)，在查询的时候不需要添加租户信息</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Chentyit</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019/9/11 09:09</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> <span class="keyword">extends</span> <span class="title">BaseMapper</span>&lt;<span class="title">User</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@SqlParser</span>(filter = <span class="keyword">true</span>)</span><br><span class="line">    <span class="meta">@Select</span>(<span class="string">"select * from user_pro $&#123;ew.customSqlSegment&#125;"</span>)</span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">mySelectList</span><span class="params">(@Param(Constants.WRAPPER)</span>Wrapper&lt;User&gt; wrapper)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li></ol><h2 id="动态表名-SQL-解析器"><a href="#动态表名-SQL-解析器" class="headerlink" title="动态表名 SQL 解析器"></a>动态表名 SQL 解析器</h2><h3 id="介绍：-5"><a href="#介绍：-5" class="headerlink" title="介绍："></a>介绍：</h3><p>分表存储</p><h3 id="使用：-3"><a href="#使用：-3" class="headerlink" title="使用："></a>使用：</h3><ol><li><p>添加动态表名插件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Chentyit</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019/9/11 09:18</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBatisPlusConfiguration</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> ThreadLocal&lt;String&gt; myTableName = <span class="keyword">new</span> ThreadLocal&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ******************</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加分页插件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> PaginationInterceptor <span class="title">paginationInterceptor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        PaginationInterceptor paginationInterceptor = <span class="keyword">new</span> PaginationInterceptor();</span><br><span class="line"></span><br><span class="line">        ArrayList&lt;ISqlParser&gt; sqlParserList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 设置动态表名</span></span><br><span class="line">        DynamicTableNameParser dynamicTableNameParser =  <span class="keyword">new</span> DynamicTableNameParser();</span><br><span class="line">        Map&lt;String, ITableNameHandler&gt; tableNameHandlerMap = <span class="keyword">new</span> HashMap&lt;&gt;(<span class="number">16</span>);</span><br><span class="line">        <span class="comment">// 返回值为 MyBatisPlusConfiguration.myTableName.set("user_2019"); 设置的表名</span></span><br><span class="line">        tableNameHandlerMap.put(<span class="string">"user_pro"</span>, (metaObject, sql, tableName) -&gt; myTableName.get());</span><br><span class="line">        dynamicTableNameParser.setTableNameHandlerMap(tableNameHandlerMap);</span><br><span class="line">        sqlParserList.add(dynamicTableNameParser);</span><br><span class="line"></span><br><span class="line">        paginationInterceptor.setSqlParserList(sqlParserList);</span><br><span class="line">        paginationInterceptor.setSqlParserFilter(<span class="keyword">new</span> ISqlParserFilter() &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 是否执行过滤</span></span><br><span class="line"><span class="comment">             * <span class="doctag">@param</span> metaObject</span></span><br><span class="line"><span class="comment">             * <span class="doctag">@return</span> false 代表不增加过滤信息；true 代表增加过滤信息</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">doFilter</span><span class="params">(MetaObject metaObject)</span> </span>&#123;</span><br><span class="line">                MappedStatement ms = SqlParserHelper.getMappedStatement(metaObject);</span><br><span class="line">                <span class="keyword">if</span> (<span class="string">"cn.chentyit.mp2.dao.UserMapper.selectById"</span>.equals(ms.getId())) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> paginationInterceptor;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在代码中调用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">select</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 设置表名</span></span><br><span class="line">    MyBatisPlusConfiguration.myTableName.set(<span class="string">"user_2019"</span>);</span><br><span class="line">    List&lt;User&gt; users = userMapper.selectList(<span class="keyword">null</span>);</span><br><span class="line">    users.forEach(System.out::println);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="SQL-注入器"><a href="#SQL-注入器" class="headerlink" title="SQL 注入器"></a>SQL 注入器</h2><h3 id="介绍：-6"><a href="#介绍：-6" class="headerlink" title="介绍："></a>介绍：</h3><p>自定义 SQL</p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><ol><li><p>创建定义方法的类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Chentyit</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019/9/11 14:55</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DeleteAllMethod</span> <span class="keyword">extends</span> <span class="title">AbstractMethod</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> MappedStatement <span class="title">injectMappedStatement</span><span class="params">(Class&lt;?&gt; mapperClass, Class&lt;?&gt; modelClass, TableInfo tableInfo)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 指定的 SQL</span></span><br><span class="line">        String sql = <span class="string">"delete from "</span> + tableInfo.getTableName();</span><br><span class="line">        <span class="comment">// mapper 接口方法名</span></span><br><span class="line">        String method = <span class="string">"deleteAll"</span>;</span><br><span class="line"></span><br><span class="line">        SqlSource sqlSource = languageDriver.createSqlSource(configuration, sql, modelClass);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> addDeleteMappedStatement(mapperClass, method, sqlSource);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>创建注入器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Chentyit</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019/9/11 14:58</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MySqlInjector</span> <span class="keyword">extends</span> <span class="title">DefaultSqlInjector</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;AbstractMethod&gt; <span class="title">getMethodList</span><span class="params">(Class&lt;?&gt; mapperClass)</span> </span>&#123;</span><br><span class="line">        List&lt;AbstractMethod&gt; methodList = <span class="keyword">super</span>.getMethodList(mapperClass);</span><br><span class="line">        methodList.add(<span class="keyword">new</span> DeleteAllMethod());</span><br><span class="line">        <span class="keyword">return</span> methodList;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在 Mapper 中加入自定义方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Chentyit</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019/9/11 15:09</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">MyMapper</span>&lt;<span class="title">T</span>&gt; <span class="keyword">extends</span> <span class="title">BaseMapper</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">deleteAll</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Chentyit</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2019/9/11 09:09</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>:</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserMapper</span> <span class="keyword">extends</span> <span class="title">MyMapper</span>&lt;<span class="title">User</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@SqlParser</span>(filter = <span class="keyword">true</span>)</span><br><span class="line">    <span class="meta">@Select</span>(<span class="string">"select * from user_pro $&#123;ew.customSqlSegment&#125;"</span>)</span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">mySelectList</span><span class="params">(@Param(Constants.WRAPPER)</span>Wrapper&lt;User&gt; wrapper)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;推荐视频&quot;&gt;&lt;a href=&quot;#推荐视频&quot; class=&quot;headerlink&quot; title=&quot;推荐视频&quot;&gt;&lt;/a&gt;推荐视频&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://www.imooc.com/learn/1130&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;MyBatis 入门教程&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.imooc.com/learn/1171&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;MyBatis 进阶教程&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="https://www.chentyit.com/categories/Java/"/>
    
    
      <category term="MyBatis-Plus" scheme="https://www.chentyit.com/tags/MyBatis-Plus/"/>
    
  </entry>
  
  <entry>
    <title>Scala 操作外部数据</title>
    <link href="https://www.chentyit.com/2019/09/10/Scala-%E6%93%8D%E4%BD%9C%E5%A4%96%E9%83%A8%E6%95%B0%E6%8D%AE/"/>
    <id>https://www.chentyit.com/2019/09/10/Scala-操作外部数据/</id>
    <published>2019-09-10T11:48:17.000Z</published>
    <updated>2019-09-10T12:05:28.104Z</updated>
    
    <content type="html"><![CDATA[<ul><li>操作文件 &amp;&amp; 网络数据</li><li>操作XML</li><li>操作 MySQL</li></ul><a id="more"></a><h2 id="操作文件-amp-amp-网络数据"><a href="#操作文件-amp-amp-网络数据" class="headerlink" title="操作文件 &amp;&amp; 网络数据"></a>操作文件 &amp;&amp; 网络数据</h2><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.chentyit.chapter09</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> scala.io.<span class="type">Source</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">FileApp</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">main</span></span>(args: <span class="type">Array</span>[<span class="type">String</span>]): <span class="type">Unit</span> = &#123;</span><br><span class="line">        <span class="keyword">val</span> file = <span class="type">Source</span>.fromFile(<span class="string">"E:\\test\\data.txt"</span>)(scala.io.<span class="type">Codec</span>.<span class="type">UTF8</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 按行读</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">readLine</span></span>(): <span class="type">Unit</span> = &#123;</span><br><span class="line">            <span class="keyword">for</span> (line &lt;- file.getLines()) &#123;</span><br><span class="line">                println(line)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//    readLine()</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 按照字符读</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">readChar</span></span>(): <span class="type">Unit</span> = &#123;</span><br><span class="line">            <span class="keyword">for</span> (ele &lt;- file) &#123;</span><br><span class="line">                println(ele)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// readChar()</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 读取网络文件</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">readNet</span></span>(): <span class="type">Unit</span> = &#123;</span><br><span class="line">            <span class="keyword">val</span> file = <span class="type">Source</span>.fromURL(<span class="string">"http://www.chentyit.com"</span>)</span><br><span class="line">            <span class="keyword">for</span> (line &lt;- file.getLines()) &#123;</span><br><span class="line">                println(line)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        readNet()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="操作XML"><a href="#操作XML" class="headerlink" title="操作XML"></a>操作XML</h2><h3 id="实例一"><a href="#实例一" class="headerlink" title="实例一"></a>实例一</h3><p>test.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">symbols</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">symbol</span> <span class="attr">ticker</span>=<span class="string">"AAPL"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">units</span>&gt;</span>200<span class="tag">&lt;/<span class="name">units</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">symbol</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">units</span>&gt;</span>200<span class="tag">&lt;/<span class="name">units</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">symbol</span> <span class="attr">ticker</span>=<span class="string">"IBM"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">units</span>&gt;</span>400<span class="tag">&lt;/<span class="name">units</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">symbol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">symbols</span>&gt;</span></span><br></pre></td></tr></table></figure><p>XMLApp.scala</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.chentyit.chapter09</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.&#123;<span class="type">FileInputStream</span>, <span class="type">InputStreamReader</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> scala.xml.<span class="type">XML</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">XMLApp</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">loadXML</span></span>(): <span class="type">Unit</span> = &#123;</span><br><span class="line">        <span class="comment">//    val xml = XML.load(this.getClass.getClassLoader.getResource("test.xml"))</span></span><br><span class="line">        <span class="comment">//    println(xml)</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//    val xml = XML.load(new FileInputStream("E:\\Program\\IDEA-workplace\\Scala\\scalatrain\\src\\main\\resources\\test.xml"))</span></span><br><span class="line">        <span class="comment">//    print(xml)</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">val</span> xml = <span class="type">XML</span>.load(<span class="keyword">new</span> <span class="type">InputStreamReader</span>(<span class="keyword">new</span> <span class="type">FileInputStream</span>(<span class="string">"E:\\Program\\IDEA-workplace\\Scala\\scalatrain\\src\\main\\resources\\test.xml"</span>)))</span><br><span class="line">        print(xml)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">main</span></span>(args: <span class="type">Array</span>[<span class="type">String</span>]): <span class="type">Unit</span> = &#123;</span><br><span class="line">        loadXML()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="实例二"><a href="#实例二" class="headerlink" title="实例二"></a>实例二</h3><p>pk.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">fix</span> <span class="attr">major</span>=<span class="string">"4"</span> <span class="attr">minor</span>=<span class="string">"2"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"BeginString"</span> <span class="attr">required</span>=<span class="string">"Y"</span>&gt;</span>FIX4.2<span class="tag">&lt;/<span class="name">field</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"MsgType"</span> <span class="attr">required</span>=<span class="string">"Y"</span>&gt;</span>Test<span class="tag">&lt;/<span class="name">field</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">trailer</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"Signature"</span> <span class="attr">required</span>=<span class="string">"N"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"CheckSum"</span> <span class="attr">required</span>=<span class="string">"Y"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">trailer</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">messages</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">message</span> <span class="attr">name</span>=<span class="string">"Logon"</span> <span class="attr">msgtype</span>=<span class="string">"A"</span> <span class="attr">msgcat</span>=<span class="string">"admin"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"ResetSeqNumFlag"</span> <span class="attr">required</span>=<span class="string">"N"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"MaxMessageSize"</span> <span class="attr">required</span>=<span class="string">"N"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">group</span> <span class="attr">name</span>=<span class="string">"NoMsgTypes"</span> <span class="attr">required</span>=<span class="string">"N"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"RefMsgType"</span> <span class="attr">required</span>=<span class="string">"N"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"MsgDirection"</span> <span class="attr">required</span>=<span class="string">"N"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">group</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">message</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">message</span> <span class="attr">name</span>=<span class="string">"ResendRequest"</span> <span class="attr">msgtype</span>=<span class="string">"2"</span> <span class="attr">msgcat</span>=<span class="string">"admin"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"BeginSeqNo"</span> <span class="attr">required</span>=<span class="string">"Y"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">field</span> <span class="attr">name</span>=<span class="string">"EndSeqNo"</span> <span class="attr">required</span>=<span class="string">"Y"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">message</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">messages</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">fields</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">field</span> <span class="attr">number</span>=<span class="string">"1"</span> <span class="attr">name</span>=<span class="string">"TradingEntityId"</span> <span class="attr">type</span>=<span class="string">"STRING"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">field</span> <span class="attr">number</span>=<span class="string">"4"</span> <span class="attr">name</span>=<span class="string">"AdvSide"</span> <span class="attr">type</span>=<span class="string">"STRING"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span> <span class="attr">enum</span>=<span class="string">"X"</span> <span class="attr">description</span>=<span class="string">"CROSS"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span> <span class="attr">enum</span>=<span class="string">"T"</span> <span class="attr">description</span>=<span class="string">"TRADE"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">field</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">field</span> <span class="attr">number</span>=<span class="string">"5"</span> <span class="attr">name</span>=<span class="string">"AdvTransType"</span> <span class="attr">type</span>=<span class="string">"STRING"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">value</span> <span class="attr">enum</span>=<span class="string">"N"</span> <span class="attr">description</span>=<span class="string">"NEW"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">field</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">fields</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">fix</span>&gt;</span></span><br></pre></td></tr></table></figure><p>XMLApp.scala</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.chentyit.chapter09</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.&#123;<span class="type">FileInputStream</span>, <span class="type">InputStreamReader</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> scala.xml.<span class="type">XML</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">XMLApp</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">readXMLAttr</span></span>(): <span class="type">Unit</span> = &#123;</span><br><span class="line">        <span class="keyword">val</span> xml = <span class="type">XML</span>.load(<span class="keyword">this</span>.getClass.getClassLoader.getResource(<span class="string">"pk.xml"</span>))</span><br><span class="line">        <span class="comment">//    println(xml)</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 找到 &lt;header&gt; 下的 &lt;field&gt;</span></span><br><span class="line">        <span class="comment">//    val headerField = xml \ "header" \ "field"</span></span><br><span class="line">        <span class="comment">//    println(headerField)</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 找到所有的 &lt;field&gt;</span></span><br><span class="line">        <span class="comment">//    val fields = xml \\ "field"</span></span><br><span class="line">        <span class="comment">//    for (field &lt;- fields) &#123;</span></span><br><span class="line">        <span class="comment">//      println(field)</span></span><br><span class="line">        <span class="comment">//    &#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 找到 /header/field/name</span></span><br><span class="line">        <span class="comment">//    val fieldAttributes = (xml \ "header" \ "field").map(_ \ "@name")</span></span><br><span class="line">        <span class="comment">//    val fieldAttributes = (xml \ "header" \ "field" \\ "@name")</span></span><br><span class="line">        <span class="comment">//    for (filedAttribute &lt;- fieldAttributes) &#123;</span></span><br><span class="line">        <span class="comment">//      println(filedAttribute)</span></span><br><span class="line">        <span class="comment">//    &#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 找到 name="Logon" 的 message</span></span><br><span class="line">        <span class="comment">//    val filters = (xml \\ "message").filter(_.attribute("name").exists(_.text.equals("Logon")))</span></span><br><span class="line">        <span class="comment">//    val filters = (xml \\ "message").filter(x =&gt; (x \ "@name").text.equals("Logon"))</span></span><br><span class="line">        <span class="comment">//    for (filter &lt;- filters) &#123;</span></span><br><span class="line">        <span class="comment">//      println(filter)</span></span><br><span class="line">        <span class="comment">//    &#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 找到 header/field/name</span></span><br><span class="line">        (xml \ <span class="string">"header"</span> \ <span class="string">"field"</span>).map(x =&gt;(x \ <span class="string">"@name"</span>, x.text, x \ <span class="string">"@required"</span>)).foreach(println)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">main</span></span>(args: <span class="type">Array</span>[<span class="type">String</span>]): <span class="type">Unit</span> = &#123;</span><br><span class="line">        readXMLAttr()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="操作-MySQL"><a href="#操作-MySQL" class="headerlink" title="操作 MySQL"></a>操作 MySQL</h2><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.chentyit.chapter09</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.&#123;<span class="type">Connection</span>, <span class="type">DriverManager</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">MySQLApp</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">main</span></span>(args: <span class="type">Array</span>[<span class="type">String</span>]): <span class="type">Unit</span> = &#123;</span><br><span class="line">        <span class="keyword">val</span> url = <span class="string">"jdbc:mysql://127.0.0.1:3306/mysql?characterEncoding=utf8&amp;useSSL=true&amp;serverTimezone=Asia/Shanghai"</span></span><br><span class="line">        <span class="keyword">val</span> userName = <span class="string">"root"</span></span><br><span class="line">        <span class="keyword">val</span> password = <span class="string">"Chentyit123456"</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> connection: <span class="type">Connection</span> = <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 返回运行时的一个 class 类型</span></span><br><span class="line">            <span class="comment">// 不写也可以，但是建议写上</span></span><br><span class="line">            classOf[com.mysql.cj.jdbc.<span class="type">Driver</span>]</span><br><span class="line">            connection = <span class="type">DriverManager</span>.getConnection(url, userName, password)</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 创建 Statement，执行查询语句</span></span><br><span class="line">            <span class="keyword">val</span> statement = connection.createStatement()</span><br><span class="line">            <span class="keyword">val</span> resultSet = statement.executeQuery(<span class="string">"select host, user from user"</span>)</span><br><span class="line">            <span class="keyword">while</span> (resultSet.next()) &#123;</span><br><span class="line">                <span class="keyword">val</span> host = resultSet.getString(<span class="string">"host"</span>)</span><br><span class="line">                <span class="keyword">val</span> user = resultSet.getString(<span class="string">"user"</span>)</span><br><span class="line"></span><br><span class="line">                println(<span class="string">s"<span class="subst">$host</span>, <span class="subst">$user</span>"</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> &#123;</span><br><span class="line">            <span class="keyword">case</span> e: <span class="type">Exception</span> =&gt; e.printStackTrace()</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">// 释放资源</span></span><br><span class="line">            <span class="keyword">if</span> (connection != <span class="literal">null</span>) &#123;</span><br><span class="line">                connection.close()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;操作文件 &amp;amp;&amp;amp; 网络数据&lt;/li&gt;
&lt;li&gt;操作XML&lt;/li&gt;
&lt;li&gt;操作 MySQL&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Scala" scheme="https://www.chentyit.com/categories/Scala/"/>
    
    
      <category term="大数据" scheme="https://www.chentyit.com/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
  </entry>
  
  <entry>
    <title>Scala隐式转换</title>
    <link href="https://www.chentyit.com/2019/09/10/Scala%E9%9A%90%E5%BC%8F%E8%BD%AC%E6%8D%A2/"/>
    <id>https://www.chentyit.com/2019/09/10/Scala隐式转换/</id>
    <published>2019-09-10T11:48:06.000Z</published>
    <updated>2019-09-10T11:53:03.071Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>为一个已存在的类添加一个新的方法</p><p>Java：动态代理</p><p>Scala：隐式转换</p><a id="more"></a><h2 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h2><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 传一个简单的对象进来 (man)</span></span><br><span class="line"><span class="comment"> * 返回一个牛逼的对象回去 (SuperMan)</span></span><br><span class="line"><span class="comment"> * 然后简单对象就有了牛逼对象的方法了</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">implicit</span> <span class="function"><span class="keyword">def</span> <span class="title">man2superman</span></span>(man: <span class="type">Man</span>): <span class="type">SuperMan</span> = <span class="keyword">new</span> <span class="type">SuperMan</span>(man.name)</span><br></pre></td></tr></table></figure><h2 id="实例一"><a href="#实例一" class="headerlink" title="实例一"></a>实例一</h2><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.chentyit.chapter08</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.<span class="type">File</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> scala.io.<span class="type">Source</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/********************* 人变超人 *********************/</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Man</span>(<span class="params">val name: <span class="type">String</span></span>) </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">eat</span></span>() = &#123;</span><br><span class="line">    println(<span class="string">s"man[ <span class="subst">$name</span> ] eat ......"</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SuperMan</span>(<span class="params">val name: <span class="type">String</span></span>) </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">fly</span></span>() = &#123;</span><br><span class="line">    println(<span class="string">s"superman[ <span class="subst">$name</span> ] fly ......"</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/********************* 给 Scala 的文件对象添加 read 操作 *********************/</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RichFile</span>(<span class="params">file: <span class="type">File</span></span>) </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">read</span></span>() = &#123;</span><br><span class="line">    <span class="type">Source</span>.fromFile(file.getAbsoluteFile).mkString</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">ImplicitApp</span> <span class="keyword">extends</span> <span class="title">App</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 定义隐式转换函数</span></span><br><span class="line">  <span class="comment">//  implicit def man2superman(man: Man): SuperMan = new SuperMan(man.name)</span></span><br><span class="line">  <span class="comment">//</span></span><br><span class="line">  <span class="comment">//  val man = new Man("cty")</span></span><br><span class="line">  <span class="comment">//  man.eat()</span></span><br><span class="line">  <span class="comment">//  man.fly()</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">implicit</span> <span class="function"><span class="keyword">def</span> <span class="title">file2RichFile</span></span>(file: <span class="type">File</span>): <span class="type">RichFile</span> = <span class="keyword">new</span> <span class="type">RichFile</span>(file)</span><br><span class="line">  <span class="keyword">val</span> file = <span class="keyword">new</span> <span class="type">File</span>(<span class="string">"E:\\test\\data.txt"</span>)</span><br><span class="line">  println(file.read())</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="实例二（切面封装）"><a href="#实例二（切面封装）" class="headerlink" title="实例二（切面封装）"></a>实例二（切面封装）</h2><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.chentyit.scala06</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.<span class="type">File</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> scala.io.<span class="type">Source</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/******************* 比较器的扩展 *******************/</span></span><br><span class="line"><span class="keyword">case</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span>(<span class="params">name: <span class="type">String</span>, age: <span class="type">Int</span></span>)</span></span><br><span class="line"><span class="class"><span class="title">trait</span> <span class="title">UserOrdering</span> <span class="keyword">extends</span> <span class="title">Ordering</span>[<span class="type">User</span>] </span>&#123;</span><br><span class="line">  <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">compare</span></span>(x: <span class="type">User</span>, y: <span class="type">User</span>): <span class="type">Int</span> = &#123;</span><br><span class="line">    x.age - y.age</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/******************* 对文件的读写的扩展 *******************/</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RichFile</span>(<span class="params">file: <span class="type">String</span></span>) </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">read</span></span>: <span class="type">String</span> = &#123;</span><br><span class="line">    <span class="type">Source</span>.fromFile(file).mkString</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">File</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">apply</span></span>(file: <span class="type">String</span>): <span class="type">File</span> = <span class="keyword">new</span> <span class="type">File</span>(file)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/******************* 隐式函数 切面封装 *******************/</span></span><br><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">ImplicitContext</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 隐式对象</span></span><br><span class="line">  <span class="keyword">implicit</span> <span class="class"><span class="keyword">object</span> <span class="title">UserOrder</span> <span class="keyword">extends</span> <span class="title">UserOrdering</span></span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">  <span class="title">//</span> <span class="title">隐式函数</span></span></span><br><span class="line"><span class="class">  <span class="title">implicit</span> <span class="title">def</span> <span class="title">double2Int</span>(<span class="params">x: <span class="type">Double</span></span>) </span>= x.toInt;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 将 File 转成 RichFile</span></span><br><span class="line">  <span class="keyword">implicit</span> <span class="function"><span class="keyword">def</span> <span class="title">file2RichFIle</span></span>(file: <span class="type">File</span>) = <span class="keyword">new</span> <span class="type">RichFile</span>(file.getAbsolutePath)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 导入切面封装的对象</span></span><br><span class="line"><span class="keyword">import</span> cn.chentyit.scala06.<span class="type">ImplicitContext</span>._</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">main</span></span>(args: <span class="type">Array</span>[<span class="type">String</span>]): <span class="type">Unit</span> = &#123;</span><br><span class="line">    println(<span class="type">List</span>(<span class="number">23</span>, <span class="number">43</span>, <span class="number">5</span>, <span class="number">42</span>).sorted)</span><br><span class="line"></span><br><span class="line">    println(<span class="type">List</span>(<span class="type">User</span>(<span class="string">"jack"</span>, <span class="number">20</span>), <span class="type">User</span>(<span class="string">"tom"</span>, <span class="number">18</span>)).sorted)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> i: <span class="type">Int</span> = <span class="number">100.9</span></span><br><span class="line">    println(i)</span><br><span class="line"></span><br><span class="line">    println(<span class="type">File</span>(<span class="string">"E:\\test\\data.txt"</span>).read)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="隐式参数（不建议使用）"><a href="#隐式参数（不建议使用）" class="headerlink" title="隐式参数（不建议使用）"></a>隐式参数（不建议使用）</h2><p>介绍：指的是在函数或者方法中，定义一个用 implicit 修饰的参数，此时 Scala 会尝试找到一个指定类型的，用 implicit 修饰的对象，即隐式值，并注入参数</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.chentyit.chapter08</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 设置隐式参数的函数在没有传参的情况下会寻找作用域（方法，对象，伴生对象）中存在的一个隐式值并传入</span></span><br><span class="line"><span class="comment"> * 如果传参就直接将参数传递过去</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">ImplicitArgsApp</span> <span class="keyword">extends</span> <span class="title">App</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">implicit</span> <span class="keyword">val</span> test = <span class="string">"test"</span></span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">testParam</span></span>(<span class="keyword">implicit</span> name: <span class="type">String</span>): <span class="type">Unit</span> = &#123;</span><br><span class="line">    println(name + <span class="string">"~~~~~~~~~~~~~~~~~~~~"</span>)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//  implicit val name = "implicit_name"</span></span><br><span class="line">  <span class="comment">// 编译器会传一个已存在的隐式参数进入函数</span></span><br><span class="line">  <span class="comment">//  testParam</span></span><br><span class="line">  <span class="comment">//  testParam("cty")</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">//  implicit val s1 = "s1"</span></span><br><span class="line">  <span class="comment">//  implicit val s2 = "s2"</span></span><br><span class="line">  <span class="comment">// 编译器不知道应该传哪一个隐式参数进去 会报错</span></span><br><span class="line">  <span class="comment">//  testParam</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="隐式类"><a href="#隐式类" class="headerlink" title="隐式类"></a>隐式类</h2><p>介绍：对类增加 implicit 限定的类，其作用主要是对类的加强</p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.chentyit.chapter08</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">ImplicitClassApp</span> <span class="keyword">extends</span> <span class="title">App</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">implicit</span> <span class="class"><span class="keyword">class</span> <span class="title">CalculatorInt</span>(<span class="params">x: <span class="type">Int</span></span>) </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add</span></span>(a: <span class="type">Int</span>) = a + x</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">implicit</span> <span class="class"><span class="keyword">class</span> <span class="title">CalculatorStr</span>(<span class="params">str: <span class="type">String</span></span>) </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">add</span></span>(a: <span class="type">Int</span>): <span class="type">Int</span> = &#123;</span><br><span class="line">      <span class="keyword">var</span> i = str.toInt</span><br><span class="line">      <span class="keyword">return</span> i + a</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  println(<span class="number">1.</span>add(<span class="number">3</span>))</span><br><span class="line">  println(<span class="string">"12"</span>.add(<span class="number">1</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;为一个已存在的类添加一个新的方法&lt;/p&gt;
&lt;p&gt;Java：动态代理&lt;/p&gt;
&lt;p&gt;Scala：隐式转换&lt;/p&gt;
    
    </summary>
    
      <category term="Scala" scheme="https://www.chentyit.com/categories/Scala/"/>
    
    
      <category term="大数据" scheme="https://www.chentyit.com/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
  </entry>
  
  <entry>
    <title>Scala函数高级操作</title>
    <link href="https://www.chentyit.com/2019/09/10/Scala%E5%87%BD%E6%95%B0%E9%AB%98%E7%BA%A7%E6%93%8D%E4%BD%9C/"/>
    <id>https://www.chentyit.com/2019/09/10/Scala函数高级操作/</id>
    <published>2019-09-10T11:47:34.000Z</published>
    <updated>2019-09-10T12:04:59.559Z</updated>
    
    <content type="html"><![CDATA[<ul><li>字符串高级操作</li><li>匿名函数</li><li>Curry 函数</li><li>高阶函数</li><li>综合例子</li><li>偏函数</li></ul><a id="more"></a><h2 id="字符串高级操作"><a href="#字符串高级操作" class="headerlink" title="字符串高级操作"></a>字符串高级操作</h2><h3 id="插入变量"><a href="#插入变量" class="headerlink" title="插入变量"></a>插入变量</h3><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.chentyit.chapter07</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">StringApp</span> <span class="keyword">extends</span> <span class="title">App</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> s = <span class="string">"Hello"</span></span><br><span class="line">    <span class="keyword">val</span> name = <span class="string">"PK"</span></span><br><span class="line">    <span class="keyword">val</span> team = <span class="string">"AC Milan"</span></span><br><span class="line"></span><br><span class="line">    println(<span class="string">s"<span class="subst">$s</span> <span class="subst">$name</span> <span class="subst">$team</span>"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="多行字符串"><a href="#多行字符串" class="headerlink" title="多行字符串"></a>多行字符串</h3><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.chentyit.chapter07</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">StringApp</span> <span class="keyword">extends</span> <span class="title">App</span> </span>&#123;</span><br><span class="line">    <span class="keyword">val</span> b =</span><br><span class="line">        <span class="string">""</span><span class="string">"</span></span><br><span class="line"><span class="string">          | 这是一个多行字符串</span></span><br><span class="line"><span class="string">          | Hello world</span></span><br><span class="line"><span class="string">          | Chentyit</span></span><br><span class="line"><span class="string">          |"</span><span class="string">""</span>.stripMargin</span><br><span class="line">    println(b)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="匿名函数"><a href="#匿名函数" class="headerlink" title="匿名函数"></a>匿名函数</h2><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.chentyit.chapter07</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 匿名函数：函数可以匿名，也可以不匿名</span></span><br><span class="line"><span class="comment"> * (参数名：参数类型) =&gt; 函数体</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">FunctoinApp</span> <span class="keyword">extends</span> <span class="title">App</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">val</span> m1 = (x: <span class="type">Int</span>) =&gt; x + <span class="number">1</span></span><br><span class="line">  println(m1(<span class="number">10</span>))</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">def</span> <span class="title">add</span> </span>= (x: <span class="type">Int</span>, y: <span class="type">Int</span>) =&gt; x + y</span><br><span class="line">  println(add(<span class="number">10</span>, <span class="number">20</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Curry-函数"><a href="#Curry-函数" class="headerlink" title="Curry 函数"></a>Curry 函数</h2><h3 id="实例一"><a href="#实例一" class="headerlink" title="实例一"></a>实例一</h3><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.chentyit.chapter07</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">CurryApp</span> <span class="keyword">extends</span> <span class="title">App</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sum</span></span>(x: <span class="type">Int</span>, y: <span class="type">Int</span>) = x + y</span><br><span class="line">    println(sum(<span class="number">10</span>, <span class="number">20</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将原来接收两个参数的函数，转换成两个</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sum2</span></span>(x: <span class="type">Int</span>)(y: <span class="type">Int</span>) = x + y</span><br><span class="line">    println(sum2(<span class="number">10</span>)(<span class="number">20</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="实例二"><a href="#实例二" class="headerlink" title="实例二"></a>实例二</h3><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.chentyit.scala02</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">fun1</span></span>(x: <span class="type">Int</span>): <span class="type">Int</span> =&gt; <span class="type">Int</span> = &#123;</span><br><span class="line">        y: <span class="type">Int</span> =&gt; &#123;</span><br><span class="line">            println(<span class="string">s"<span class="subst">$x</span>, <span class="subst">$y</span>"</span>)</span><br><span class="line">            x + y</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">fun2</span></span>(x: <span class="type">Int</span>, y: <span class="type">Int</span>): <span class="type">Int</span> = &#123;</span><br><span class="line">        x + y</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * fn3 可以分步调用</span></span><br><span class="line"><span class="comment">   * fn2 不可以分步调用</span></span><br><span class="line"><span class="comment">   * fn1 可读性差</span></span><br><span class="line"><span class="comment">   * @param x</span></span><br><span class="line"><span class="comment">   * @param y</span></span><br><span class="line"><span class="comment">   * @return</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">fun3</span></span>(x: <span class="type">Int</span>)(y: <span class="type">Int</span>): <span class="type">Int</span> = &#123;</span><br><span class="line">        x + y</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">main</span></span>(args: <span class="type">Array</span>[<span class="type">String</span>]): <span class="type">Unit</span> = &#123;</span><br><span class="line">        <span class="keyword">val</span> re1 = fun1(<span class="number">2</span>)</span><br><span class="line">        <span class="keyword">val</span> re2 = re1(<span class="number">3</span>)</span><br><span class="line">        println(re2)</span><br><span class="line"></span><br><span class="line">        println(fun3(<span class="number">2</span>)(<span class="number">3</span>))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="高阶函数"><a href="#高阶函数" class="headerlink" title="高阶函数"></a>高阶函数</h2><h3 id="map-amp-amp-filter"><a href="#map-amp-amp-filter" class="headerlink" title="map &amp;&amp; filter"></a>map &amp;&amp; filter</h3><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.chentyit.chapter07</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">HighFuncApp</span> <span class="keyword">extends</span> <span class="title">App</span> </span>&#123;</span><br><span class="line">    <span class="keyword">val</span> l = <span class="type">List</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// map：逐个去操作集合中的每个元素</span></span><br><span class="line">    println(l.map((x: <span class="type">Int</span>) =&gt; x * <span class="number">2</span>))</span><br><span class="line">    println(l.map(x =&gt; x * <span class="number">2</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 下划线代表当前的元素</span></span><br><span class="line">    println(l.map(_ * <span class="number">2</span>))</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 过滤出符合条件的元素</span></span><br><span class="line">    println(l.map(_ * <span class="number">2</span>).filter(_ &gt; <span class="number">8</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="reduce-amp-amp-fold"><a href="#reduce-amp-amp-fold" class="headerlink" title="reduce &amp;&amp; fold"></a>reduce &amp;&amp; fold</h3><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.chentyit.chapter07</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">HighFuncApp</span> <span class="keyword">extends</span> <span class="title">App</span> </span>&#123;</span><br><span class="line">    <span class="keyword">val</span> l = <span class="type">List</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将两两相邻的元素相减</span></span><br><span class="line">    println(l.reduce(_ - _))</span><br><span class="line">    <span class="comment">// 从左边开始</span></span><br><span class="line">    <span class="comment">// 左边一个元素减右边一个</span></span><br><span class="line">    <span class="comment">// 得到的新值再去和右边的值组合再相减</span></span><br><span class="line">    println(l.reduceLeft(_ - _))</span><br><span class="line">    <span class="comment">// 和上面一样，只是组合方向不同</span></span><br><span class="line">    println(l.reduceRight(_ - _))</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 和 reduce 一样</span></span><br><span class="line">    <span class="comment">// 但是在计算开始会给一个初值和第一个参与计算的元素组合</span></span><br><span class="line">    println(l.fold(<span class="number">0</span>)(_ - _))</span><br><span class="line">    println(l.foldLeft(<span class="number">0</span>)(_ - _))</span><br><span class="line">    println(l.foldRight(<span class="number">0</span>)(_ - _))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="flatten-amp-amp-flatMap"><a href="#flatten-amp-amp-flatMap" class="headerlink" title="flatten &amp;&amp; flatMap"></a>flatten &amp;&amp; flatMap</h3><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.chentyit.chapter07</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">HighFuncApp</span> <span class="keyword">extends</span> <span class="title">App</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">val</span> f = <span class="type">List</span>(<span class="type">List</span>(<span class="number">1</span>, <span class="number">2</span>), <span class="type">List</span>(<span class="number">3</span>, <span class="number">4</span>), <span class="type">List</span>(<span class="number">5</span>, <span class="number">6</span>))</span><br><span class="line">    <span class="comment">// 将集合 “拍扁”</span></span><br><span class="line">    println(f.flatten)</span><br><span class="line">    <span class="comment">// 操作集合中的元素</span></span><br><span class="line">    println(f.map(_.map(_ * <span class="number">2</span>)))</span><br><span class="line">    <span class="comment">// 操作集合中的元素并 “拍扁”</span></span><br><span class="line">    <span class="comment">// 可以理解为 flat + map</span></span><br><span class="line">    println(f.flatMap(_.map(_ * <span class="number">2</span>)))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>输出结果</strong></p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">List</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>)</span><br><span class="line"><span class="type">List</span>(<span class="type">List</span>(<span class="number">2</span>, <span class="number">4</span>), <span class="type">List</span>(<span class="number">6</span>, <span class="number">8</span>), <span class="type">List</span>(<span class="number">10</span>, <span class="number">12</span>))</span><br><span class="line"><span class="type">List</span>(<span class="number">2</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">12</span>)</span><br></pre></td></tr></table></figure><h2 id="综合例子"><a href="#综合例子" class="headerlink" title="综合例子"></a>综合例子</h2><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.chentyit.chapter07</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> scala.io.<span class="type">Source</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">HighFuncApp</span> <span class="keyword">extends</span> <span class="title">App</span> </span>&#123;</span><br><span class="line">    <span class="keyword">val</span> txt = <span class="type">Source</span>.fromFile(<span class="string">"E:\\test\\data.txt"</span>).mkString</span><br><span class="line">    <span class="keyword">val</span> l = <span class="type">List</span>(txt)</span><br><span class="line">    <span class="comment">// mapValues 作用：</span></span><br><span class="line">    <span class="comment">// Key 保持不变，与新的 Value 一起组成新的元素</span></span><br><span class="line">    <span class="comment">// 该函数只适用于 K-V 对的元素</span></span><br><span class="line">    l.flatMap(_.split(<span class="string">","</span>)).map(x =&gt; (x, <span class="number">1</span>)).groupBy(_._1).mapValues(_.size).foreach(println)</span><br><span class="line">    <span class="comment">// 两种方法结果相同</span></span><br><span class="line">    l.flatMap(_.split(<span class="string">","</span>)).map(x =&gt; (x, <span class="number">1</span>)).groupBy(_._1).map(x =&gt; (x._1, x._2.size)).foreach(println)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>测试文件内容：（data.txt)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hello,hello,world,hello</span><br></pre></td></tr></table></figure><p><strong>输出结果</strong></p><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(world,<span class="number">1</span>)</span><br><span class="line">(hello,<span class="number">3</span>)</span><br></pre></td></tr></table></figure><h2 id="偏函数"><a href="#偏函数" class="headerlink" title="偏函数"></a>偏函数</h2><h3 id="实例一-1"><a href="#实例一-1" class="headerlink" title="实例一"></a>实例一</h3><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.chentyit.chapter07</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> scala.util.<span class="type">Random</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 偏函数：</span></span><br><span class="line"><span class="comment"> * 被包在花括号内没有 match 的一组 case 语句</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">PartitalFunctionApp</span> <span class="keyword">extends</span> <span class="title">App</span> </span>&#123;</span><br><span class="line">    <span class="keyword">val</span> names = <span class="type">Array</span>(<span class="string">"Akiho Yoshizawa"</span>, <span class="string">"YuiHatano"</span>, <span class="string">"Aoi Sola"</span>)</span><br><span class="line">    <span class="keyword">val</span> name = names(<span class="type">Random</span>.nextInt(names.length))</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * A 是输入参数类型</span></span><br><span class="line"><span class="comment">   * B 是输出参数类型</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">   * @return</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">sayChinese</span></span>: <span class="type">PartialFunction</span>[<span class="type">String</span>, <span class="type">String</span>] = &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">"Akiho Yoshizawa"</span> =&gt; <span class="string">"aaa"</span></span><br><span class="line">        <span class="keyword">case</span> <span class="string">"YuiHatano"</span> =&gt; <span class="string">"bbb"</span></span><br><span class="line">        <span class="keyword">case</span> <span class="string">"Aoi Sola"</span> =&gt; <span class="string">"ccc"</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    println(sayChinese(<span class="string">"Akiho Yoshizawa"</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="实例二-1"><a href="#实例二-1" class="headerlink" title="实例二"></a>实例二</h3><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> chentyit.scala2</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">Test2</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">main</span></span>(args: <span class="type">Array</span>[<span class="type">String</span>]): <span class="type">Unit</span> = &#123;</span><br><span class="line">        <span class="keyword">val</span> l = <span class="type">List</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="string">"one"</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将集合中的数据加 10</span></span><br><span class="line">        <span class="comment">// l.map(&#123; case x: Int =&gt; x + 10 &#125;)</span></span><br><span class="line">        println(l.collect(&#123; <span class="keyword">case</span> x: <span class="type">Int</span> =&gt; x + <span class="number">10</span> &#125;))</span><br><span class="line">        <span class="keyword">val</span> fn1 = <span class="keyword">new</span> <span class="type">PartialFunction</span>[<span class="type">Any</span>, <span class="type">Int</span>] &#123;</span><br><span class="line">            <span class="comment">// 判断数据是否合法</span></span><br><span class="line">            <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">isDefinedAt</span></span>(x: <span class="type">Any</span>): <span class="type">Boolean</span> = x.isInstanceOf[<span class="type">Int</span>]</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 处理数据的方式</span></span><br><span class="line">            <span class="keyword">override</span> <span class="function"><span class="keyword">def</span> <span class="title">apply</span></span>(x: <span class="type">Any</span>): <span class="type">Int</span> = x.asInstanceOf[<span class="type">Int</span>] + <span class="number">10</span></span><br><span class="line">        &#125;</span><br><span class="line">        println(l.collect(fn1))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="实例三"><a href="#实例三" class="headerlink" title="实例三"></a>实例三</h3><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> chentyit.scala2</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">Test2</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">main</span></span>(args: <span class="type">Array</span>[<span class="type">String</span>]): <span class="type">Unit</span> = &#123;</span><br><span class="line">        <span class="keyword">val</span> l = <span class="type">List</span>(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="string">"one"</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">val</span> fn2: <span class="type">PartialFunction</span>[<span class="type">Any</span>, <span class="type">Int</span>] = &#123;</span><br><span class="line">            <span class="keyword">case</span> x: <span class="type">Int</span> =&gt; x + <span class="number">10</span></span><br><span class="line">        &#125;</span><br><span class="line">        println(l.collect(fn2))</span><br><span class="line"></span><br><span class="line">        println(l.collect(&#123; <span class="keyword">case</span> x: <span class="type">Int</span> =&gt; x + <span class="number">10</span> &#125;))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="实例四"><a href="#实例四" class="headerlink" title="实例四"></a>实例四</h3><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> chentyit.scala2</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">object</span> <span class="title">Test2</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">main</span></span>(args: <span class="type">Array</span>[<span class="type">String</span>]): <span class="type">Unit</span> = &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">val</span> strNum = <span class="type">List</span>(<span class="string">"one"</span>, <span class="string">"two"</span>, <span class="string">"three"</span>)</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">fnx1</span></span>: <span class="type">PartialFunction</span>[<span class="type">String</span>, <span class="type">Int</span>] = &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"one"</span> =&gt; <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">fnx2</span></span>: <span class="type">PartialFunction</span>[<span class="type">String</span>, <span class="type">Int</span>] = &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"two"</span> =&gt; <span class="number">2</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">fnx3</span></span>: <span class="type">PartialFunction</span>[<span class="type">String</span>, <span class="type">Int</span>] = &#123;</span><br><span class="line">            <span class="keyword">case</span> _ =&gt; <span class="number">3</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">fnxx</span> </span>= fnx1 orElse fnx2 orElse fnx3</span><br><span class="line"></span><br><span class="line">        println(strNum.collect(fnxx))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;字符串高级操作&lt;/li&gt;
&lt;li&gt;匿名函数&lt;/li&gt;
&lt;li&gt;Curry 函数&lt;/li&gt;
&lt;li&gt;高阶函数&lt;/li&gt;
&lt;li&gt;综合例子&lt;/li&gt;
&lt;li&gt;偏函数&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Scala" scheme="https://www.chentyit.com/categories/Scala/"/>
    
    
      <category term="大数据" scheme="https://www.chentyit.com/tags/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
  </entry>
  
  <entry>
    <title>Scrapy(一)</title>
    <link href="https://www.chentyit.com/2019/09/08/Scrapy-%E4%B8%80/"/>
    <id>https://www.chentyit.com/2019/09/08/Scrapy-一/</id>
    <published>2019-09-08T11:17:22.000Z</published>
    <updated>2019-09-08T11:18:46.630Z</updated>
    
    <content type="html"><![CDATA[<ul><li>介绍</li><li>使用</li><li>pipline</li><li>logging</li></ul><a id="more"></a><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>Scrapy 是一个未来爬取网站数据，提取结构性数据而编写的应用框架</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scrapy startproject mySpider</span><br></pre></td></tr></table></figure><h3 id="创建爬取模块"><a href="#创建爬取模块" class="headerlink" title="创建爬取模块"></a>创建爬取模块</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scrapy genspider itcast "itcast.cn"</span><br></pre></td></tr></table></figure><h3 id="启动开始爬取"><a href="#启动开始爬取" class="headerlink" title="启动开始爬取"></a>启动开始爬取</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scrapy crawl itcast</span><br></pre></td></tr></table></figure><p><strong>代码块：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ItcastSpider</span><span class="params">(scrapy.Spider)</span>:</span></span><br><span class="line">    <span class="comment"># 爬虫名</span></span><br><span class="line">    name = <span class="string">'itcast'</span></span><br><span class="line">    <span class="comment"># 允许爬取的范围</span></span><br><span class="line">    allowed_domains = [<span class="string">'itcast.cn'</span>]</span><br><span class="line">    <span class="comment"># 最开始请求的 url 地址</span></span><br><span class="line">    start_urls = [<span class="string">'http://www.itcast.cn/channel/teacher.shtml'</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(self, response)</span>:</span></span><br><span class="line">        <span class="comment"># 处理 start_urls 地址对应的响应</span></span><br><span class="line">        <span class="comment"># ret1 = response.xpath("//div[@class='tea_con']//h3/text()").extract()</span></span><br><span class="line">        <span class="comment"># print(ret1)</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 分组</span></span><br><span class="line">        li_list = response.xpath(<span class="string">"//div[@class='tea_con']//li"</span>)</span><br><span class="line">        <span class="keyword">for</span> li <span class="keyword">in</span> li_list:</span><br><span class="line">            item = &#123;&#125;</span><br><span class="line">            item[<span class="string">"name"</span>] = li.xpath(<span class="string">".//h3/text()"</span>).extract()[<span class="number">0</span>]</span><br><span class="line">            item[<span class="string">"title"</span>] = li.xpath(<span class="string">".//h4/text()"</span>).extract()[<span class="number">0</span>]</span><br><span class="line">            print(item)</span><br></pre></td></tr></table></figure><h3 id="保存数据"><a href="#保存数据" class="headerlink" title="保存数据"></a>保存数据</h3><p>pipeline 中保存数据</p><h2 id="pipline"><a href="#pipline" class="headerlink" title="pipline"></a>pipline</h2><p>pipline 可以有多个，原因：</p><ol><li>可能会有多个 Spider，不同的 pipline 处理不同的 item 的内容</li><li>一个 spider 的内容可能要做不同的操作，比如存入不同的数据库中</li></ol><p>注意：</p><ol><li>pipline 的权重越小，优先级越高</li><li>pipline 中 process_item 方法名不能修改为其他的名称</li></ol><h2 id="logging"><a href="#logging" class="headerlink" title="logging"></a>logging</h2><h3 id="Scrapy-项目中使用"><a href="#Scrapy-项目中使用" class="headerlink" title="Scrapy 项目中使用"></a>Scrapy 项目中使用</h3><p><strong>在 setting.py 里面设置</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 设置日志级别</span><br><span class="line">LOG_LEVEL = &quot;WARNING&quot;</span><br><span class="line"></span><br><span class="line"># 设置日志保存路径</span><br><span class="line">LOG_FILE = &quot;./log.log&quot;</span><br></pre></td></tr></table></figure><p><strong>在代码中调用：</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="comment"># 先调用 logging 模块</span></span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将 python 文件名加载到 logging 中</span></span><br><span class="line">logger = logging.getLogger(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ItcastSpider</span><span class="params">(scrapy.Spider)</span>:</span></span><br><span class="line">    name = <span class="string">'itcast'</span></span><br><span class="line">    allowed_domains = [<span class="string">'itcast.cn'</span>]</span><br><span class="line">    start_urls = [<span class="string">'http://www.itcast.cn/'</span>]</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parse</span><span class="params">(self, response)</span>:</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">            item = &#123;&#125;</span><br><span class="line">            item[<span class="string">"come_from"</span>] = <span class="string">"itcast"</span></span><br><span class="line">            <span class="comment"># 将信息按照等级打印出来</span></span><br><span class="line">            logger.warning(item)</span><br><span class="line">            <span class="keyword">yield</span> item</span><br></pre></td></tr></table></figure><h3 id="在一般项目用使用"><a href="#在一般项目用使用" class="headerlink" title="在一般项目用使用"></a>在一般项目用使用</h3><p><strong><em>单独测试 logging 模块</em>：</strong></p><p><strong>log_a.py</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置日志的输出样式</span></span><br><span class="line">logging.basicConfig(level=logging.INFO,</span><br><span class="line">                    format=<span class="string">'%(levelname)s [%(filename)s] '</span></span><br><span class="line">                           <span class="string">'[%(lineno)d] : %(message)s'</span></span><br><span class="line">                           <span class="string">' - %(asctime)s'</span>, datefmt=<span class="string">'[%d/%b/%Y %H:%M:%S]'</span>)</span><br><span class="line"></span><br><span class="line">logger = logging.getLogger(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    logger.info(<span class="string">"this is a info log"</span>)</span><br><span class="line">    logger.info(<span class="string">"this is a info log 1"</span>)</span><br></pre></td></tr></table></figure><p>在 log_b.py 中调用 log_a.py 中的 logging</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> log_a <span class="keyword">import</span> logger</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    logger.warning(<span class="string">"this is log_b 1"</span>)</span><br><span class="line">    logger.warning(<span class="string">"this is log_b 2"</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;介绍&lt;/li&gt;
&lt;li&gt;使用&lt;/li&gt;
&lt;li&gt;pipline&lt;/li&gt;
&lt;li&gt;logging&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="python" scheme="https://www.chentyit.com/categories/python/"/>
    
    
      <category term="爬虫" scheme="https://www.chentyit.com/tags/%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>HBase 安装</title>
    <link href="https://www.chentyit.com/2019/09/01/HBase-%E5%AE%89%E8%A3%85/"/>
    <id>https://www.chentyit.com/2019/09/01/HBase-安装/</id>
    <published>2019-09-01T03:45:26.000Z</published>
    <updated>2019-09-15T03:46:31.023Z</updated>
    
    <content type="html"><![CDATA[<h2 id="下载-HBase-的安装包"><a href="#下载-HBase-的安装包" class="headerlink" title="下载 HBase 的安装包"></a>下载 HBase 的安装包</h2><p>下载的是 2.0.6 版本</p><h2 id="解压安装包"><a href="#解压安装包" class="headerlink" title="解压安装包"></a>解压安装包</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf hdfs-*** -C /usr/local</span><br></pre></td></tr></table></figure><h2 id="添加环境变量"><a href="#添加环境变量" class="headerlink" title="添加环境变量"></a>添加环境变量</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br><span class="line"></span><br><span class="line">export HBASE_HOME="/usr/local/hbase-2.0.6"</span><br><span class="line">export PATH=$&#123;PATH&#125;:$&#123;HBASE_HOME&#125;/bin</span><br><span class="line"></span><br><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><h2 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h2><h3 id="修改-conf-下的-hbase-env-sh"><a href="#修改-conf-下的-hbase-env-sh" class="headerlink" title="修改 /conf 下的 hbase-env.sh"></a>修改 /conf 下的 hbase-env.sh</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/usr/local/jdk8</span><br><span class="line"><span class="meta">#</span> 使用自己的 Zookeeper 不使用 HBase 自带的 ZK</span><br><span class="line">export HBASE_MANAGES_ZK=false</span><br></pre></td></tr></table></figure><h3 id="修改-conf-下的-hbase-site-xml"><a href="#修改-conf-下的-hbase-site-xml" class="headerlink" title="修改 /conf 下的 hbase-site.xml"></a>修改 /conf 下的 hbase-site.xml</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 这里不设置这个也可以，但是要在下面写上端口号，设置了也不会发生冲突 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>hbase.zookeeper.property.clientPort<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>2181<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>hbase.zookeeper.quorum<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>bigdata1:2181,bigdata2:2181,bigdata3:2181<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 可以不配置，如果要配置，需要和zookeeper配置文件zoo.cfg中的dataDir指定的路径相同 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>hbase.zookeeper.property.dataDir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>/usr/local/zookeeper/data<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 设置 HDFS 的命名空间  --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 注意：这里要和 hadoop 里面的 core-site.xml 里面配置的 HDFS 命名空间名称相同  --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>hbase.rootdir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>hdfs://ns/hbase<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 设置为分布式 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>hbase.cluster.distributed<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="把-hadoop-的配置文件-core-site-xml-和-hdfs-site-xml-复制到-hbase-的配置文件目录下"><a href="#把-hadoop-的配置文件-core-site-xml-和-hdfs-site-xml-复制到-hbase-的配置文件目录下" class="headerlink" title="把 hadoop 的配置文件 core-site.xml 和 hdfs-site.xml 复制到 hbase 的配置文件目录下"></a>把 hadoop 的配置文件 core-site.xml 和 hdfs-site.xml 复制到 hbase 的配置文件目录下</h3><p>网上大多数教程都没有这一步，但是加上也没有报错</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp hadoop-2.8.4/etc/hadoop/core-site.xml hbase-2.0.6/conf/</span><br><span class="line">cp hadoop-2.8.4/etc/hadoop/hdfs-site.xml hbase-2.0.6/conf/</span><br></pre></td></tr></table></figure><h3 id="修改-regionservers-文件"><a href="#修改-regionservers-文件" class="headerlink" title="修改 regionservers 文件"></a>修改 regionservers 文件</h3><p>在 regionservers 文件中添加节点（先把里面的 localhost 删掉）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vim regionservers</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 添加如下内容（按自己要求修改）</span><br><span class="line">bigdata1</span><br><span class="line">bigdata2</span><br><span class="line">bigdata3</span><br></pre></td></tr></table></figure><h3 id="添加并修改-backup-masters文件"><a href="#添加并修改-backup-masters文件" class="headerlink" title="添加并修改 backup-masters文件"></a>添加并修改 backup-masters文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim backup-masters</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> 添加如下内容（按自己要求修改）</span><br><span class="line"><span class="meta">#</span> 这个是备用的 master 节点（防止当前 master 嗝屁后 HBase 集群也跟着嗝屁）</span><br><span class="line">bigdata6</span><br></pre></td></tr></table></figure><h2 id="将-HBase-文件全部分发到集群的其他节点"><a href="#将-HBase-文件全部分发到集群的其他节点" class="headerlink" title="将 HBase 文件全部分发到集群的其他节点"></a>将 HBase 文件全部分发到集群的其他节点</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -r /etc/local/hbase-*** hostname:/etc/local</span><br></pre></td></tr></table></figure><h2 id="同步时间（特别注意！！！）"><a href="#同步时间（特别注意！！！）" class="headerlink" title="同步时间（特别注意！！！）"></a>同步时间（<em>特别注意！！！</em>）</h2><p><strong>如果不同步时间，将无法启动</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> 没有的话就用 yum 安装后再同步</span><br><span class="line">ntpdate -u ntp.api.bz</span><br></pre></td></tr></table></figure><h2 id="启动-Zookeeper-amp-HDFS-amp-YARN"><a href="#启动-Zookeeper-amp-HDFS-amp-YARN" class="headerlink" title="启动 Zookeeper &amp; HDFS &amp; YARN"></a>启动 Zookeeper &amp; HDFS &amp; YARN</h2><p>启动后检查一下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">zkServer.sh start</span><br><span class="line">start-dfs.sh</span><br><span class="line">start-yarn.sh</span><br></pre></td></tr></table></figure><h2 id="启动-HBase"><a href="#启动-HBase" class="headerlink" title="启动 HBase"></a>启动 HBase</h2><p>(在集群的哪台机器启动，哪台就是当前的 Master)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">start-hbase.sh</span><br></pre></td></tr></table></figure><h2 id="观察启动状态"><a href="#观察启动状态" class="headerlink" title="观察启动状态"></a>观察启动状态</h2><p>在浏览器输入 <a href="http://hostname:16010" target="_blank" rel="noopener">http://hostname:16010</a> 可以按到 HBase 的节点状态（hostname 是启动 Hbase 的那台机器名）</p><p><img src="/2019/09/01/HBase-安装/hbase_web.png" alt="hbase_web"></p><p>在命令行输入 jps 查看进程（HRegionServer 和 HMaster 是否启动）</p><p><img src="/2019/09/01/HBase-安装/hbase_jps.png" alt="hbase_jps"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;下载-HBase-的安装包&quot;&gt;&lt;a href=&quot;#下载-HBase-的安装包&quot; class=&quot;headerlink&quot; title=&quot;下载 HBase 的安装包&quot;&gt;&lt;/a&gt;下载 HBase 的安装包&lt;/h2&gt;&lt;p&gt;下载的是 2.0.6 版本&lt;/p&gt;
&lt;h2 id=&quot;
      
    
    </summary>
    
      <category term="大数据" scheme="https://www.chentyit.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="HBase" scheme="https://www.chentyit.com/tags/HBase/"/>
    
  </entry>
  
  <entry>
    <title>Flume 跨服务器拉取日志</title>
    <link href="https://www.chentyit.com/2019/08/25/Flume-%E8%B7%A8%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%8B%89%E5%8F%96%E6%97%A5%E5%BF%97/"/>
    <id>https://www.chentyit.com/2019/08/25/Flume-跨服务器拉取日志/</id>
    <published>2019-08-25T07:07:24.000Z</published>
    <updated>2019-09-15T03:46:21.434Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Flume-跨服务器拉取日志"><a href="#Flume-跨服务器拉取日志" class="headerlink" title="Flume 跨服务器拉取日志"></a>Flume 跨服务器拉取日志</h2><h3 id="思路介绍"><a href="#思路介绍" class="headerlink" title="思路介绍"></a>思路介绍</h3><ol><li>在实际开发中，网站应该不会运行装有 Hadoop 以及相关服务的集群上，所以需要一台新的服务器来运行网站的环境以免发生环境冲突或者端口占用的错误</li><li>分服务器的 Nginx 生成日志文件 access.log（存放到任何目录）</li><li>分服务器的 Flume 监听 access.log 文件的变化，并将 access.log 文件里面的信息拉取下沉到汇总服务器</li><li>汇总服务器获取到分服务器下沉的日志信息，然后再一步下沉到 HDFS 中</li><li>如果以上思路成立就存在 Flume 汇总服务器以及 Flume 分服务器（我自己命名的），汇总服务器接收分服务器下沉过来的数据，然后再下沉到 HDFS 中，最后在用 MR + HIVE + Sqoop + MySQL 完成工作流</li></ol><h3 id="分服务器的-Flume-配置文件"><a href="#分服务器的-Flume-配置文件" class="headerlink" title="分服务器的 Flume 配置文件"></a>分服务器的 Flume 配置文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">a1.sources = r1</span><br><span class="line">a1.channels = c1</span><br><span class="line">a1.sinks = k1</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>define sources</span><br><span class="line">a1.sources.r1.type = TAILDIR</span><br><span class="line">a1.sources.r1.positionFile = /usr/local/flume-1.8.0/bigdata8/taildir_position.json</span><br><span class="line">a1.sources.r1.command =tail -f /test/log.txt</span><br><span class="line">a1.sources.r1.filegroups = f1</span><br><span class="line">a1.sources.r1.filegroups.f1 = /root/web/access.log</span><br><span class="line">a1.sources.r1.headers.f1.headerKey1 = value1</span><br><span class="line">a1.sources.r1.fileHeader = true</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>define channels</span><br><span class="line">a1.channels.c1.type = memory</span><br><span class="line">a1.channels.c1.capacity = 1000</span><br><span class="line">a1.channels.c1.transactionCapacity = 100</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>define sink</span><br><span class="line">a1.sinks.k1.type = avro</span><br><span class="line">a1.sinks.k1.hostname = 192.168.11.37</span><br><span class="line">a1.sinks.k1.port =44444</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>bind sources and sink to channel </span><br><span class="line">a1.sources.r1.channels = c1</span><br><span class="line">a1.sinks.k1.channel = c1</span><br></pre></td></tr></table></figure><h3 id="汇总服务器的-Flume-配置文件"><a href="#汇总服务器的-Flume-配置文件" class="headerlink" title="汇总服务器的 Flume 配置文件"></a>汇总服务器的 Flume 配置文件</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">a2.sources = r2</span><br><span class="line">a2.channels = c2</span><br><span class="line">a2.sinks = k2</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>define sources</span><br><span class="line">a2.sources.r2.type = avro</span><br><span class="line">a2.sources.r2.bind = 0.0.0.0</span><br><span class="line">a2.sources.r2.port = 44444</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>define channels</span><br><span class="line">a2.channels.c2.type = memory</span><br><span class="line">a2.channels.c2.capacity = 10000</span><br><span class="line">a2.channels.c2.transactionCapacity = 10000</span><br><span class="line">a2.channels.c2.byteCapacityBufferPercentage = 20</span><br><span class="line">a2.channels.c2.byteCapacity = 800000</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>define sink</span><br><span class="line">a2.sinks.k2.type = hdfs</span><br><span class="line">a2.sinks.k2.channel = c1</span><br><span class="line">a2.sinks.k2.hdfs.path = /weblog/flume/events/%y-%m-%d/%H%M%S</span><br><span class="line">a2.sinks.k2.hdfs.filePrefix = events-</span><br><span class="line"><span class="meta">#</span>一定要加上</span><br><span class="line">a2.sinks.k2.hdfs.useLocalTimeStamp = true</span><br><span class="line">a2.sinks.k2.hdfs.round = true</span><br><span class="line">a2.sinks.k2.hdfs.roundValue = 10</span><br><span class="line">a2.sinks.k2.hdfs.roundUnit = minute</span><br><span class="line"><span class="meta">#</span>生成的文件类型，默认是Sequencefile，可用DataStream，则为普通文本</span><br><span class="line">a2.sinks.k2.hdfs.fileType = DataStream</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span>bind sources and sink to channel </span><br><span class="line">a2.sources.r2.channels = c2</span><br><span class="line">a2.sinks.k2.channel = c2</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>在分服务器中将下沉（sink）的 type 设置为 avro，并设置下沉的目标服务器的 IP 地址</p><p>在汇总服务器中将源（source）的 type 设置成为 arvo</p><p>启动的时候<strong>先启动汇总服务器再启动分服务器</strong></p><p>这里注意：<strong>不要在 a2.sources.r2.bind 后面写 localhost 要直接写符合 IPv4 格式的 IP 地址</strong>，我试过很多次就是这里出了问题</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Flume-跨服务器拉取日志&quot;&gt;&lt;a href=&quot;#Flume-跨服务器拉取日志&quot; class=&quot;headerlink&quot; title=&quot;Flume 跨服务器拉取日志&quot;&gt;&lt;/a&gt;Flume 跨服务器拉取日志&lt;/h2&gt;&lt;h3 id=&quot;思路介绍&quot;&gt;&lt;a href=&quot;#思
      
    
    </summary>
    
      <category term="大数据" scheme="https://www.chentyit.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="Flume" scheme="https://www.chentyit.com/tags/Flume/"/>
    
  </entry>
  
  <entry>
    <title>Hive(一)</title>
    <link href="https://www.chentyit.com/2019/08/20/Hive-%E4%B8%80/"/>
    <id>https://www.chentyit.com/2019/08/20/Hive-一/</id>
    <published>2019-08-19T16:09:08.000Z</published>
    <updated>2019-09-15T03:46:32.893Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hive"><a href="#Hive" class="headerlink" title="Hive"></a>Hive</h1><p><strong>Hive 数据仓库</strong>：用于存储数据，都是历史数据，不可变的数据，不能改，不能删，对于 hive 而言，增加的是文件</p><p><strong>关系型数据库</strong>：用于存储数据，注重业务逻辑，可以进行增删改查</p><p>hive 保存了元数据信息，是一个元数据管理工具，是一个驱动，hive 解析 sql 语句，将其翻译成为 MR 的运算程序，同时保存了与元数据信息</p><h1 id="安装教程"><a href="#安装教程" class="headerlink" title="安装教程"></a>安装教程</h1><h2 id="1-JDK-安装"><a href="#1-JDK-安装" class="headerlink" title="1. JDK 安装"></a>1. JDK 安装</h2><h2 id="2-Hadoop-安装"><a href="#2-Hadoop-安装" class="headerlink" title="2. Hadoop 安装"></a>2. Hadoop 安装</h2><h2 id="3-MySQL-安装"><a href="#3-MySQL-安装" class="headerlink" title="3. MySQL 安装"></a>3. MySQL 安装</h2><h2 id="4-开始安装-Hive"><a href="#4-开始安装-Hive" class="headerlink" title="4. 开始安装 Hive"></a>4. 开始安装 Hive</h2><ul><li><p>解压到 /usr/local</p></li><li><p>配置环境变量到 /etc/profile</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export HIVE_HOME="/usr/local/hive1.2.2"</span><br></pre></td></tr></table></figure></li><li><p>配置元数据库信息</p><p>在 hive*/conf/ 中</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp hive-default.xml.template hive-site.xml</span><br></pre></td></tr></table></figure><p>在 hive-site.xml 中添加以下文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionURL<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>jdbc:mysql://bigdata7:3306/hive?createDatabaseIfNotExist=true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>JDBC connect string for a JDBC metastore<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionDriverName<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>com.mysql.jdbc.Driver<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>Driver class name for a JDBC metastore<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionUserName<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>root<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>username to use against metastore database<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionPassword<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>Chentyit123456<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>password to use against metastore database<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>system:java.io.tmpdir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>/usr/local/hive1.2.2/tmp<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>system:user.name<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>root<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><strong>将 MySQL 的连接 jar 包拷贝到 $HIVE_HOME/lib 目录下</strong></p><p>这里如果数据库是 5.5 以上版本的 MySQL，选择版本高一点的 5.1.*.jar 连接包，如果是 8.0.0 的就直接使用 8 的连接包</p></li><li><p><strong>拷贝 hive 的 lib 目录中 jline.2.12.jar 的 jar 包替换掉 hadoop 中的包</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span>&#123;HADOOP_HOME&#125;/share/hadoop/yarn/lib/jline-0.9.94.jar</span><br></pre></td></tr></table></figure></li><li><p>启动 Hive</p><ol><li><p>直接使用 hive 命令</p></li><li><p>先打开服务端，再打开客户端连接</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hive --service hiveserver2&gt;/dev/null 2&gt;&amp;1 &amp;</span><br><span class="line">beeline -u jdbc:hive2://主机名:10000 -n root</span><br></pre></td></tr></table></figure></li></ol></li></ul><h1 id="Hive-命令"><a href="#Hive-命令" class="headerlink" title="Hive 命令"></a>Hive 命令</h1><h3 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> chentyit;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> chentyit <span class="keyword">if</span> <span class="keyword">not</span> <span class="keyword">exists</span> chentyit;</span><br></pre></td></tr></table></figure><h3 id="查看数据库"><a href="#查看数据库" class="headerlink" title="查看数据库"></a>查看数据库</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">databases</span>;</span><br><span class="line"><span class="keyword">show</span> <span class="keyword">databases</span> <span class="keyword">like</span> <span class="string">'chenty.*'</span>;</span><br></pre></td></tr></table></figure><h3 id="查看某一个数据库的详细信息"><a href="#查看某一个数据库的详细信息" class="headerlink" title="查看某一个数据库的详细信息"></a>查看某一个数据库的详细信息</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">describe</span> <span class="keyword">database</span> chentyit;</span><br></pre></td></tr></table></figure><h3 id="删除非空数据库"><a href="#删除非空数据库" class="headerlink" title="删除非空数据库"></a>删除非空数据库</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">database</span> chentyit <span class="keyword">CASCADE</span>;</span><br></pre></td></tr></table></figure><h3 id="创建数据库时，指定数据库位置（这个位置是在-hdfs-上的）"><a href="#创建数据库时，指定数据库位置（这个位置是在-hdfs-上的）" class="headerlink" title="创建数据库时，指定数据库位置（这个位置是在 hdfs 上的）"></a>创建数据库时，指定数据库位置（这个位置是在 hdfs 上的）</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> chentyit_p location <span class="string">'/home/database/'</span>;</span><br></pre></td></tr></table></figure><p><img src="/2019/08/20/Hive-一/chentyit_p.png" alt="chentyit_p"></p><h3 id="创建数据库的时候希望能够给数据库增加一些描述性东西"><a href="#创建数据库的时候希望能够给数据库增加一些描述性东西" class="headerlink" title="创建数据库的时候希望能够给数据库增加一些描述性东西"></a>创建数据库的时候希望能够给数据库增加一些描述性东西</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> chentyit_c <span class="keyword">comment</span> <span class="string">'my database'</span>;</span><br></pre></td></tr></table></figure><p><img src="/2019/08/20/Hive-一/chentyit_c.png" alt="chentyit_c"></p><h3 id="创建数据库的时候，需要为数据库增加属性信息，可以使用-with-dbproperties-信息"><a href="#创建数据库的时候，需要为数据库增加属性信息，可以使用-with-dbproperties-信息" class="headerlink" title="创建数据库的时候，需要为数据库增加属性信息，可以使用 with dbproperties 信息"></a>创建数据库的时候，需要为数据库增加属性信息，可以使用 with dbproperties 信息</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> chentyit_d <span class="keyword">with</span> dbproperties(<span class="string">'createor'</span>=<span class="string">'chenty'</span>,<span class="string">'date'</span>=<span class="string">'2019-08-19'</span>);</span><br></pre></td></tr></table></figure><h3 id="修改数据库的属性信息"><a href="#修改数据库的属性信息" class="headerlink" title="修改数据库的属性信息"></a>修改数据库的属性信息</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">database</span> chentyit_d <span class="keyword">set</span> dbproperties(<span class="string">'edited-by'</span>=<span class="string">'hello'</span>);</span><br></pre></td></tr></table></figure><h3 id="如果要使用自己已经存在的数据库"><a href="#如果要使用自己已经存在的数据库" class="headerlink" title="如果要使用自己已经存在的数据库"></a>如果要使用自己已经存在的数据库</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">use</span> chentyit;</span><br></pre></td></tr></table></figure><h3 id="查看当前数据库下的所有表"><a href="#查看当前数据库下的所有表" class="headerlink" title="查看当前数据库下的所有表"></a>查看当前数据库下的所有表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">tables</span>;</span><br></pre></td></tr></table></figure><h3 id="创建表（默认是内部表）"><a href="#创建表（默认是内部表）" class="headerlink" title="创建表（默认是内部表）"></a>创建表（默认是内部表）</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> user_info(<span class="keyword">id</span> <span class="built_in">int</span>, <span class="keyword">name</span> <span class="keyword">string</span>) <span class="keyword">row</span> <span class="keyword">format</span> <span class="keyword">delimited</span> <span class="keyword">fields</span> <span class="keyword">terminated</span> <span class="keyword">by</span> <span class="string">'\t'</span>;</span><br></pre></td></tr></table></figure><h3 id="创建一个表，该表和已有的某一个表的结构一样（复制表结构）"><a href="#创建一个表，该表和已有的某一个表的结构一样（复制表结构）" class="headerlink" title="创建一个表，该表和已有的某一个表的结构一样（复制表结构）"></a>创建一个表，该表和已有的某一个表的结构一样（复制表结构）</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">if</span> <span class="keyword">not</span> <span class="keyword">exists</span> emp <span class="keyword">like</span> emp1;</span><br></pre></td></tr></table></figure><h3 id="删除一个已经存在的表"><a href="#删除一个已经存在的表" class="headerlink" title="删除一个已经存在的表"></a>删除一个已经存在的表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> emp1;</span><br></pre></td></tr></table></figure><h3 id="修改一个表明，重命名"><a href="#修改一个表明，重命名" class="headerlink" title="修改一个表明，重命名"></a>修改一个表明，重命名</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> user_info <span class="keyword">rename</span> <span class="keyword">to</span> emp_info;</span><br></pre></td></tr></table></figure><p><img src="/2019/08/20/Hive-一/rename_table.png" alt="rename_table"></p><h3 id="将hdfs上面的文件信息导入到hive表中"><a href="#将hdfs上面的文件信息导入到hive表中" class="headerlink" title="将hdfs上面的文件信息导入到hive表中"></a>将hdfs上面的文件信息导入到hive表中</h3><p>/home/bigdata 代表文件在在 HDFS 上位置</p><p>使用改命令时一定要注意数据与数据之间在 txt 文件编辑的时候一定要 Tab 间隔</p><p>导入后 HDFS 里面的数据没了</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">load</span> <span class="keyword">data</span> inpath <span class="string">'/home/database'</span> <span class="keyword">into</span> <span class="keyword">table</span> emp_info;</span><br></pre></td></tr></table></figure><p><img src="/2019/08/20/Hive-一/load_from_hdfs.png" alt="load_from_hdfs"></p><h3 id="给某一个表增加某一列的信息"><a href="#给某一个表增加某一列的信息" class="headerlink" title="给某一个表增加某一列的信息"></a>给某一个表增加某一列的信息</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp_info <span class="keyword">add</span> <span class="keyword">columns</span>(job <span class="keyword">string</span>);</span><br></pre></td></tr></table></figure><h3 id="修改某一个表的某一列的信息"><a href="#修改某一个表的某一列的信息" class="headerlink" title="修改某一个表的某一列的信息"></a>修改某一个表的某一列的信息</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp_info <span class="keyword">change</span> <span class="keyword">column</span> job cjob <span class="built_in">int</span> <span class="keyword">comment</span> <span class="string">'job_id'</span>;</span><br></pre></td></tr></table></figure><p><img src="/2019/08/20/Hive-一/alter_column.png" alt="alter_column"></p><h3 id="替换表中的某一个列"><a href="#替换表中的某一个列" class="headerlink" title="替换表中的某一个列"></a>替换表中的某一个列</h3><p>这里注意，这里的 replace 不是替换一列，而是把<strong>所有列</strong>重新<strong>改写</strong>成<strong>括号里面的新列</strong></p><p>举个例子：原列是（a, b, c) 用下列命令后就变成了 （job, dept）而 a，b，c 三列不见了</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> emp_info <span class="keyword">replace</span> <span class="keyword">columns</span>(job <span class="built_in">int</span>, dept <span class="built_in">int</span>);</span><br></pre></td></tr></table></figure><h3 id="修改表中某一列的属性"><a href="#修改表中某一列的属性" class="headerlink" title="修改表中某一列的属性"></a>修改表中某一列的属性</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> tab_name <span class="keyword">set</span> tblproperties(<span class="string">'value'</span>=<span class="string">'hello'</span>);</span><br></pre></td></tr></table></figure><h3 id="Hive-成批向某一表插入数据"><a href="#Hive-成批向某一表插入数据" class="headerlink" title="Hive 成批向某一表插入数据"></a>Hive 成批向某一表插入数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> overwrite <span class="keyword">table</span> emp_info_b <span class="keyword">select</span> * <span class="keyword">from</span> emp_info;</span><br></pre></td></tr></table></figure><h3 id="将查询结果保留到一个新表中去"><a href="#将查询结果保留到一个新表中去" class="headerlink" title="将查询结果保留到一个新表中去"></a>将查询结果保留到一个新表中去</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> emp_info_c <span class="keyword">as</span> <span class="keyword">select</span> * <span class="keyword">from</span> emp_info_b;</span><br></pre></td></tr></table></figure><h3 id="将查询结果保存到指定的文件目录（可以是本地，也可以-HDFS）"><a href="#将查询结果保存到指定的文件目录（可以是本地，也可以-HDFS）" class="headerlink" title="将查询结果保存到指定的文件目录（可以是本地，也可以 HDFS）"></a>将查询结果保存到指定的文件目录（可以是本地，也可以 HDFS）</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> overwrite <span class="keyword">local</span> <span class="keyword">directory</span> <span class="string">'/home/hadoop/test'</span> <span class="keyword">select</span> * <span class="keyword">from</span> emp_info;</span><br><span class="line"><span class="keyword">insert</span> overwrite <span class="keyword">directory</span> <span class="string">'/aaa/bbb/'</span> <span class="keyword">select</span> * <span class="keyword">from</span> emp_info;</span><br></pre></td></tr></table></figure><h3 id="两表内连"><a href="#两表内连" class="headerlink" title="两表内连"></a>两表内连</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> emp_info a <span class="keyword">join</span> emp_info b <span class="keyword">on</span> a.id = b.id;</span><br></pre></td></tr></table></figure><h3 id="创建分区表"><a href="#创建分区表" class="headerlink" title="创建分区表"></a>创建分区表</h3><p><strong>普通表和分区表区别：有大量数据增加的需要建分区表</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> stu(<span class="keyword">id</span> <span class="built_in">INT</span>, age <span class="built_in">INT</span>, <span class="keyword">name</span> <span class="keyword">STRING</span>)</span><br><span class="line">partitioned <span class="keyword">by</span>(p_date <span class="keyword">STRING</span>) </span><br><span class="line"><span class="keyword">row</span> <span class="keyword">format</span> <span class="keyword">delimited</span> <span class="keyword">fields</span> <span class="keyword">terminated</span> <span class="keyword">by</span> <span class="string">'\t'</span>;</span><br></pre></td></tr></table></figure><p>分区表加载数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">load</span> <span class="keyword">data</span> <span class="keyword">local</span> inpath <span class="string">'本地文件路径'</span> overwrite <span class="keyword">into</span> <span class="keyword">table</span> stu <span class="keyword">partition</span> (pubdate=<span class="string">'2010-08-22'</span>);</span><br></pre></td></tr></table></figure><h3 id="创建一个带桶的表"><a href="#创建一个带桶的表" class="headerlink" title="创建一个带桶的表"></a>创建一个带桶的表</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> bucket_stu (<span class="keyword">id</span> <span class="built_in">int</span> ,age <span class="built_in">int</span> ,<span class="keyword">name</span> <span class="keyword">string</span>)</span><br><span class="line">partitioned <span class="keyword">by</span> (p_date <span class="keyword">string</span>)</span><br><span class="line">clustered <span class="keyword">by</span> (<span class="keyword">id</span>) sorted <span class="keyword">by</span>(<span class="keyword">id</span>) <span class="keyword">into</span> <span class="number">3</span> buckets</span><br><span class="line"><span class="keyword">row</span> <span class="keyword">format</span> <span class="keyword">delimited</span> <span class="keyword">fields</span> <span class="keyword">terminated</span> <span class="keyword">by</span> <span class="string">'\t'</span>;</span><br></pre></td></tr></table></figure><p><strong>分桶前要设置</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">set</span> hive.enforce.bucketing = <span class="literal">true</span>;</span><br></pre></td></tr></table></figure><p>向桶中添加数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> overwrite <span class="keyword">table</span> bucket_stu <span class="keyword">partition</span>(p_date=<span class="string">'0817'</span>) <span class="keyword">select</span> <span class="keyword">id</span>,age,<span class="keyword">name</span> <span class="keyword">from</span> stu <span class="keyword">where</span> p_date=<span class="string">'0817'</span>;</span><br></pre></td></tr></table></figure><h3 id="数据块抽样（tablesample-函数）"><a href="#数据块抽样（tablesample-函数）" class="headerlink" title="数据块抽样（tablesample() 函数）"></a>数据块抽样（tablesample() 函数）</h3><ol><li><p>tablesample(n percent) </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> xxx_new <span class="keyword">as</span> <span class="keyword">select</span> * <span class="keyword">from</span> xxx <span class="keyword">tablesample</span>(<span class="number">10</span> <span class="keyword">percent</span>);</span><br></pre></td></tr></table></figure></li><li><p>tablesample(n M) 指定抽样数据的大小，单位为M</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> xxx_new <span class="keyword">as</span> <span class="keyword">select</span> * <span class="keyword">from</span> xxx <span class="keyword">tablesample</span>(n M);</span><br></pre></td></tr></table></figure></li><li><p>tablesample(n rows) —— 默认map的数量是2 </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> xxx_new <span class="keyword">as</span> <span class="keyword">select</span> * <span class="keyword">from</span> xxx <span class="keyword">tablesample</span>(n <span class="keyword">rows</span>);</span><br></pre></td></tr></table></figure></li></ol><h3 id="分桶抽样"><a href="#分桶抽样" class="headerlink" title="分桶抽样"></a>分桶抽样</h3><p>hive 中分桶其实就是根据某一个字段 Hash 取模，放入指定数据的桶中，比如将表 table_1 按照 ID 分成 100 个桶，其算法是 hash(id) % 100，这样，hash(id) % 100 = 0 的数据被放到第一个桶中，hash(id) % 100 = 1 的记录被放到第二个桶中。创建分桶表的关键语句为：CLUSTER BY 语句。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">TABLESAMPLE (BUCKET x OUT OF y [ON colname])</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> table_01 <span class="keyword">tablesample</span>(<span class="keyword">bucket</span> <span class="number">1</span> <span class="keyword">out</span> <span class="keyword">of</span> <span class="number">10</span> <span class="keyword">on</span> <span class="keyword">rand</span>());</span><br></pre></td></tr></table></figure><p>其中 x 是要抽样的桶编号，桶编号从 1 开始，colname 表示抽样的列，y 表示桶的数量。 </p><h3 id="随机抽样（rand-函数）"><a href="#随机抽样（rand-函数）" class="headerlink" title="随机抽样（rand() 函数）"></a>随机抽样（rand() 函数）</h3><ol><li><p>使用 rand() 函数进行随机抽样，limit 关键字限制抽样返回的数据，其中 rand 函数前的 distribute 和 sort 关键字可以保证数据在 mapper 和 reducer 阶段是随机分布的（Map的个数由自己设置的个数决定）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> table_name <span class="keyword">where</span> <span class="keyword">col</span>=xxx <span class="keyword">distribute</span> <span class="keyword">by</span> <span class="keyword">rand</span>() <span class="keyword">sort</span> <span class="keyword">by</span> <span class="keyword">rand</span>() <span class="keyword">limit</span> <span class="keyword">num</span>;</span><br></pre></td></tr></table></figure></li><li><p>使用 order 关键词 (hive 会把 map 的个数设置回 1）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> table_name <span class="keyword">where</span> <span class="keyword">col</span>=xxx <span class="keyword">order</span> <span class="keyword">by</span> <span class="keyword">rand</span>() <span class="keyword">limit</span> <span class="keyword">num</span>;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Hive&quot;&gt;&lt;a href=&quot;#Hive&quot; class=&quot;headerlink&quot; title=&quot;Hive&quot;&gt;&lt;/a&gt;Hive&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;Hive 数据仓库&lt;/strong&gt;：用于存储数据，都是历史数据，不可变的数据，不能改，不能删，对于 hiv
      
    
    </summary>
    
      <category term="大数据" scheme="https://www.chentyit.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="Hive" scheme="https://www.chentyit.com/tags/Hive/"/>
    
  </entry>
  
  <entry>
    <title>Flume安装</title>
    <link href="https://www.chentyit.com/2019/08/18/Flume%E5%AE%89%E8%A3%85/"/>
    <id>https://www.chentyit.com/2019/08/18/Flume安装/</id>
    <published>2019-08-18T02:27:07.000Z</published>
    <updated>2019-09-15T03:46:24.821Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装-JDK"><a href="#安装-JDK" class="headerlink" title="安装 JDK"></a>安装 JDK</h2><h2 id="下载-flume-安装包"><a href="#下载-flume-安装包" class="headerlink" title="下载 flume 安装包"></a>下载 flume 安装包</h2><h2 id="解压安装包"><a href="#解压安装包" class="headerlink" title="解压安装包"></a>解压安装包</h2><h2 id="更改配置文件"><a href="#更改配置文件" class="headerlink" title="更改配置文件"></a>更改配置文件</h2><p>修改 conf 下的 flume-env.sh.template 复制一份到 flume-env.sh 并修改文件中的 JAVA_HOME 为 jdk 的真实路径</p><p>复制一份 flume-conf.properties.template 到 flume-conf.properties</p><h2 id="自定义配置文件"><a href="#自定义配置文件" class="headerlink" title="自定义配置文件"></a>自定义配置文件</h2><p>自行创建文件夹存放自己编写的配置文件</p><h2 id="net-logger-conf（本机运行）"><a href="#net-logger-conf（本机运行）" class="headerlink" title="net-logger.conf（本机运行）"></a>net-logger.conf（本机运行）</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> example.conf: A single-node Flume configuration</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Name the components on this agent</span><br><span class="line">a1.sources = r1</span><br><span class="line">a1.sinks = k1</span><br><span class="line">a1.channels = c1</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Describe/configure the source</span><br><span class="line">a1.sources.r1.type = netcat</span><br><span class="line">a1.sources.r1.bind = localhost</span><br><span class="line">a1.sources.r1.port = 44444</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Describe the sink</span><br><span class="line">a1.sinks.k1.type = logger</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Use a channel which buffers events in memory</span><br><span class="line">a1.channels.c1.type = memory</span><br><span class="line">a1.channels.c1.capacity = 1000</span><br><span class="line">a1.channels.c1.transactionCapacity = 100</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span> Bind the source and sink to the channel</span><br><span class="line">a1.sources.r1.channels = c1</span><br><span class="line">a1.sinks.k1.channel = c1</span><br></pre></td></tr></table></figure><p>启动 flume</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/flume-ng agent --conf conf --conf-file bigdata1/net-logger.conf --name a1 -Dflume.root.logger=INFO,console</span><br></pre></td></tr></table></figure><p>–conf-file 指定自定义配置文件（这个是单机启动）</p><p><strong>安装 telnet</strong></p><p>连接 flume</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">telnet localhost 44444</span><br></pre></td></tr></table></figure><p>就可以直接发送消息了，如果 flume 日志有打印对应的消息就是连接成功了</p><h3 id="dir-hdfs-conf（抓取日志到-hdfs）"><a href="#dir-hdfs-conf（抓取日志到-hdfs）" class="headerlink" title="dir-hdfs.conf（抓取日志到 hdfs）"></a>dir-hdfs.conf（抓取日志到 hdfs）</h3><p>配置路径同上</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">a1.sources = r1</span><br><span class="line">a1.sources.r1.channels = c1</span><br><span class="line">a1.sources.r1.type = TAILDIR</span><br><span class="line"><span class="meta">#</span>记录偏移量</span><br><span class="line">a1.sources.r1.positionFile = /usr/local/flume1.8.0/iweb/taildir_position.json</span><br><span class="line">a1.sources.r1.filegroups = f1 f2</span><br><span class="line">a1.sources.r1.filegroups.f1 = /root/iweb/test_log1/access.log</span><br><span class="line">a1.sources.r1.headers.f1.headerKey1 = value1</span><br><span class="line">a1.sources.r1.filegroups.f2 = /root/iweb/test_log2/access.log</span><br><span class="line">a1.sources.r1.headers.f2.headerKey1 = value2</span><br><span class="line">a1.sources.r1.fileHeader = true</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a1.channels = c1</span><br><span class="line">a1.channels.c1.type = memory</span><br><span class="line">a1.channels.c1.capacity = 10000</span><br><span class="line">a1.channels.c1.transactionCapacity = 10000</span><br><span class="line">a1.channels.c1.byteCapacityBufferPercentage = 20</span><br><span class="line">a1.channels.c1.byteCapacity = 800000</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a1.sinks = k1</span><br><span class="line">a1.sinks.k1.type = hdfs</span><br><span class="line">a1.sinks.k1.channel = c1</span><br><span class="line">a1.sinks.k1.hdfs.path = /flume/events/%y-%m-%d/%H%M%S</span><br><span class="line">a1.sinks.k1.hdfs.filePrefix = events-</span><br><span class="line"><span class="meta">#</span>一定要加上</span><br><span class="line">a1.sinks.k1.hdfs.useLocalTimeStamp = true</span><br><span class="line">a1.sinks.k1.hdfs.round = true</span><br><span class="line">a1.sinks.k1.hdfs.roundValue = 10</span><br><span class="line">a1.sinks.k1.hdfs.roundUnit = minute</span><br><span class="line"><span class="meta">#</span>生成的文件类型，默认是Sequencefile，可用DataStream，则为普通文本</span><br><span class="line">a1.sinks.k1.hdfs.fileType = DataStream</span><br></pre></td></tr></table></figure><p>创建 f1 和 f2 路径（除了最后一个文件）</p><p>启动 flume</p><p>重启一台终端连接到该主机，并向 f1 和 f2 路径下的 access.log（这是配置文件里面指定的，也可以自定义）写入数据</p><p>再开一台终端连接到主机，查看主机的日志文件（也是在上面的配置文件中配置）</p><p>每次写入都有一个偏移量，指定下一次读取文件的偏移位置，同时可以在 hdfs 的 web 页面进行查看</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;安装-JDK&quot;&gt;&lt;a href=&quot;#安装-JDK&quot; class=&quot;headerlink&quot; title=&quot;安装 JDK&quot;&gt;&lt;/a&gt;安装 JDK&lt;/h2&gt;&lt;h2 id=&quot;下载-flume-安装包&quot;&gt;&lt;a href=&quot;#下载-flume-安装包&quot; class=&quot;head
      
    
    </summary>
    
      <category term="大数据" scheme="https://www.chentyit.com/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
      <category term="Flume" scheme="https://www.chentyit.com/tags/Flume/"/>
    
  </entry>
  
  <entry>
    <title>Nginx安装</title>
    <link href="https://www.chentyit.com/2019/08/17/Nginx%E5%AE%89%E8%A3%85/"/>
    <id>https://www.chentyit.com/2019/08/17/Nginx安装/</id>
    <published>2019-08-17T02:06:13.000Z</published>
    <updated>2019-08-17T02:25:07.447Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装必要的-C-等插件"><a href="#安装必要的-C-等插件" class="headerlink" title="安装必要的 C++ 等插件"></a>安装必要的 C++ 等插件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y gcc gcc-c++ automake autoconf libtool make</span><br></pre></td></tr></table></figure><h2 id="安装-PCRE"><a href="#安装-PCRE" class="headerlink" title="安装 PCRE"></a>安装 PCRE</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf pcre2-10.33.tar.gz -C /usr/local/</span><br><span class="line">cd /usr/local/pcre2-10.33/</span><br><span class="line">./configure</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h2 id="安装-zlib"><a href="#安装-zlib" class="headerlink" title="安装 zlib"></a>安装 zlib</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wget http://zlib.net/zlib-1.2.11.tar.gz</span><br><span class="line">tar -zxvf zlib-1.2.11.tar.gz</span><br><span class="line">cd zlib-1.2.11/</span><br><span class="line">./configure</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h2 id="安装-OpenSSL"><a href="#安装-OpenSSL" class="headerlink" title="安装 OpenSSL"></a>安装 OpenSSL</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install openssl openssl-devel</span><br></pre></td></tr></table></figure><h2 id="安装-Nginx"><a href="#安装-Nginx" class="headerlink" title="安装 Nginx"></a>安装 Nginx</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf nginx-1.8.1.tar.gz -C /usr/local/</span><br><span class="line">cd /usr/local/nginx-1.8.1/</span><br><span class="line">./configure --prefix=/usr/local/nginx/</span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"><span class="meta">#</span> 启动需要到 Nginx 的目录下</span><br><span class="line">sbin/nginx -c conf/nginx.conf</span><br><span class="line"><span class="meta">#</span> 查看是否启动成功（80 端口启动)</span><br><span class="line">netstat -ntlp</span><br></pre></td></tr></table></figure><h2 id="更改配置文件"><a href="#更改配置文件" class="headerlink" title="更改配置文件"></a>更改配置文件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">    root   html;</span><br><span class="line">    # index  index.html index.htm;</span><br><span class="line">    proxy_pass http://chentyit.com;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后重新加载一下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sbin/nginx -s reload</span><br></pre></td></tr></table></figure><p><a href="http://nginx.org/en/docs/" target="_blank" rel="noopener">具体配置方式见官网</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;安装必要的-C-等插件&quot;&gt;&lt;a href=&quot;#安装必要的-C-等插件&quot; class=&quot;headerlink&quot; title=&quot;安装必要的 C++ 等插件&quot;&gt;&lt;/a&gt;安装必要的 C++ 等插件&lt;/h2&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;
      
    
    </summary>
    
      <category term="网络" scheme="https://www.chentyit.com/categories/%E7%BD%91%E7%BB%9C/"/>
    
    
      <category term="Nginx" scheme="https://www.chentyit.com/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>Hadoop常见错误集</title>
    <link href="https://www.chentyit.com/2019/08/13/Hadoop%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF%E9%9B%86/"/>
    <id>https://www.chentyit.com/2019/08/13/Hadoop常见错误集/</id>
    <published>2019-08-13T04:40:21.000Z</published>
    <updated>2019-08-13T16:28:18.850Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2019/08/13/Hadoop常见错误集/garrett-patz-1504925-unsplash.jpg" alt="插图"></p><blockquote><p>摄影：<a href="https://unsplash.com/photos/Ilu1Vv6EYds?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText" target="_blank" rel="noopener">Garrett Patz</a>，来自<a href="https://unsplash.com/?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText" target="_blank" rel="noopener">Unsplash</a></p></blockquote><a id="more"></a><h2 id="Hadoop集群从节点出现错误（Connection-refused）"><a href="#Hadoop集群从节点出现错误（Connection-refused）" class="headerlink" title="Hadoop集群从节点出现错误（Connection refused）"></a>Hadoop集群从节点出现错误（Connection refused）</h2><p><img src="/2019/08/13/Hadoop常见错误集/Hadoop集群从节点出现错误.png" alt="Hadoop集群从节点出现错误"></p><h3 id="错误原因："><a href="#错误原因：" class="headerlink" title="错误原因："></a>错误原因：</h3><p>Hadoop 集群 yarn-site.xml 配置错误：</p><p>默认情况下 yarn ResourceManager 相关服务IP地址指向的是0.0.0.0。</p><p>而在服务器中，0.0.0.0 指的是本机网络地址，那么 NodeManager 就会在本机找 ResourceManager 相关服务，而 slave 节点上并没有这些服务，这些服务在 ResourceManager Master 节点上。所以针对 Hadoop 集群配置 yare-site.xml 某些配置项不能使用默认配置。</p><p>注意：hadoop 伪分布式可以使用默认配置，因为所有服务都在本地运行</p><h3 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h3><p>修改<strong>所有节点上</strong>yare-site.xml配置文件，在该文件中配置ResourceManager Master节点所在地址即可解决问题。详细配置信息如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>hadoopMaster:8032<span class="tag">&lt;/<span class="name">value</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.scheduler.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>hadoopMaster:8030<span class="tag">&lt;/<span class="name">value</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.resource-tracker.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>hadoopMaster:8031<span class="tag">&lt;/<span class="name">value</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="MR本地提交集群运行"><a href="#MR本地提交集群运行" class="headerlink" title="MR本地提交集群运行"></a>MR本地提交集群运行</h2><p><img src="/2019/08/13/Hadoop常见错误集/MR本地提交集群运行错误.png" alt="MR本地提交集群运行错误"></p><h3 id="问题描述："><a href="#问题描述：" class="headerlink" title="问题描述："></a>问题描述：</h3><p>无法加载 core-site.xml 配置文件，没法找到 hdfs://ns 的路径，直接指定默认本地路径</p><h3 id="错误原因：-1"><a href="#错误原因：-1" class="headerlink" title="错误原因："></a>错误原因：</h3><p>Maven 打包时没有将 XML 文件打包，所以运行程序时无法加载到 core-site.xml 文件</p><h3 id="解决办法："><a href="#解决办法：" class="headerlink" title="解决办法："></a>解决办法：</h3><p>在 pom.xml 文件的 <code>&lt;build&gt;&lt;/build&gt;</code> 添加</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><p>再重新打包运行即可</p><h2 id="Unable-to-initialize-MapOutputCollector-org-apache-hadoop-mapred-MapTask-MapOutputBuffer"><a href="#Unable-to-initialize-MapOutputCollector-org-apache-hadoop-mapred-MapTask-MapOutputBuffer" class="headerlink" title="Unable to initialize MapOutputCollector org.apache.hadoop.mapred.MapTask$MapOutputBuffer"></a>Unable to initialize MapOutputCollector org.apache.hadoop.mapred.MapTask$MapOutputBuffer</h2><p><img src="/2019/08/13/Hadoop常见错误集/NoSuchMethodException.png" alt="NoSuchMethodException"></p><p>这个问题我花了很久时间，代码改了三次才运行成功</p><p>最后发现是因为 Mapper 和 Reducer 的传入值有问题，总结下来就是 Mapper 和 Reducer 的入参和出参的类型<strong>必须要使用 Hadoop 封装的类型，或者按照 Hadoop 要求封装的类型</strong>（自行封装的类，除了要实现 WritableComparable 接口，而且自定义类还必须要有<strong>无参构造方法</strong>），Hadoop 已封装类型如下：</p><p><img src="/2019/08/13/Hadoop常见错误集/Mapper和Reducer参数.png" alt="Mapper和Reducer参数"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;/2019/08/13/Hadoop常见错误集/garrett-patz-1504925-unsplash.jpg&quot; alt=&quot;插图&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;摄影：&lt;a href=&quot;https://unsplash.com/photos/Ilu1Vv6EYds?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Garrett Patz&lt;/a&gt;，来自&lt;a href=&quot;https://unsplash.com/?utm_source=unsplash&amp;amp;utm_medium=referral&amp;amp;utm_content=creditCopyText&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Unsplash&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Hadoop" scheme="https://www.chentyit.com/categories/Hadoop/"/>
    
    
      <category term="开发问题解决" scheme="https://www.chentyit.com/tags/%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode刷题274（H指数）</title>
    <link href="https://www.chentyit.com/2019/07/27/LeetCode%E5%88%B7%E9%A2%98274%EF%BC%88H%E6%8C%87%E6%95%B0%EF%BC%89/"/>
    <id>https://www.chentyit.com/2019/07/27/LeetCode刷题274（H指数）/</id>
    <published>2019-07-27T07:30:26.000Z</published>
    <updated>2019-07-27T07:56:39.131Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">给定一位研究者论文被引用次数的数组（被引用次数是非负整数）。编写一个方法，计算出研究者的 h 指数。</span><br><span class="line"></span><br><span class="line">h 指数的定义: “h 代表“高引用次数”（high citations）</span><br><span class="line">一名科研人员的 h 指数是指他（她）的 （N 篇论文中）至多有 h 篇论文分别被引用了至少 h 次。</span><br><span class="line">（其余的 N - h 篇论文每篇被引用次数不多于 h 次。）”</span><br><span class="line"></span><br><span class="line">来源：力扣（LeetCode）</span><br><span class="line">链接：https://leetcode-cn.com/problems/h-index</span><br><span class="line">著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</span><br></pre></td></tr></table></figure><a id="more"></a><p><strong>示例：</strong></p><blockquote><p>输入: citations = [3,0,6,1,5]<br>输出: 3<br>解释: 给定数组表示研究者总共有 5 篇论文，每篇论文相应的被引用了 3, 0, 6, 1, 5 次。由于研究者有 3 篇论文每篇至少被引用了 3 次，其余两篇论文每篇被引用不多于 3 次，所以她的 h 指数是 3。</p></blockquote><p><strong>思路（借鉴官网的题解）：</strong></p><ol><li><p>h 值意味着一个标准，将数组按照题目要求分成两个部分（我刚开始理解成这个标准是通过计算得到的，在阅读题解后发现，降序数组中，这种标准只是一个属性而已，也就是能通过数组规律直接找到）</p></li><li><p>将数组降序排列</p></li><li><p>找到 h 值，h 值就是 arr[i] == i 时的 值，将数值作图可以表示为（图片来源于<a href="https://pic.leetcode-cn.com/Figures/274_H_index.svg" target="_blank" rel="noopener">LeetCode 274题解</a>）：</p><p><img src="/2019/07/27/LeetCode刷题274（H指数）/274_H_index.png" alt="274_H_index"></p></li><li><p>h 值是 arr[i] &gt; i 的临界值，只要记录索引 i，就可以求出 h 值</p></li></ol><h2 id="Java-语言实现"><a href="#Java-语言实现" class="headerlink" title="Java 语言实现"></a>Java 语言实现</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 快速排序</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">qsort</span><span class="params">(<span class="keyword">int</span>[] arr, <span class="keyword">int</span> left, <span class="keyword">int</span> right)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (left &gt;= right) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> value = arr[left];</span><br><span class="line">        <span class="keyword">int</span> index = left;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 排序标准为降序</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = left; i &lt;= right; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (value &lt; arr[i]) &#123;</span><br><span class="line">                arr[index] = arr[i];</span><br><span class="line">                arr[i] = arr[++index];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        arr[index] = value;</span><br><span class="line"></span><br><span class="line">        qsort(arr, left, index - <span class="number">1</span>);</span><br><span class="line">        qsort(arr, index + <span class="number">1</span>, right);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 解题主体</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">hIndex</span><span class="params">(<span class="keyword">int</span>[] citations)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 对数组进行降序排序</span></span><br><span class="line">        qsort(citations, <span class="number">0</span>, citations.length - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 记录 h 值</span></span><br><span class="line">        <span class="keyword">int</span> h = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; citations.length; i++) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 只要满足引用值 arr[i] 大于 i值</span></span><br><span class="line">            <span class="comment">// 即可求出 h 值</span></span><br><span class="line">            <span class="keyword">if</span> (citations[i] &gt; i) &#123;</span><br><span class="line">                h++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> h;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Golang-语言实现"><a href="#Golang-语言实现" class="headerlink" title="Golang 语言实现"></a>Golang 语言实现</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 快速排序</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">qsort</span><span class="params">(arr []<span class="keyword">int</span>, left, right <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">    <span class="keyword">if</span> left &gt;= right &#123;</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    value := arr[left]</span><br><span class="line">    index := left</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 排序标准为降序</span></span><br><span class="line">    <span class="keyword">for</span> i := left; i &lt;= right; i++ &#123;</span><br><span class="line">        <span class="keyword">if</span> value &lt; arr[i] &#123;</span><br><span class="line">            arr[index] = arr[i]</span><br><span class="line">            arr[i] = arr[index + <span class="number">1</span>]</span><br><span class="line">            index++</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    arr[index] = value</span><br><span class="line"></span><br><span class="line">    qsort(arr, left, index - <span class="number">1</span>)</span><br><span class="line">    qsort(arr, index + <span class="number">1</span>, right)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 解题主体</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">hIndex</span><span class="params">(citations []<span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 对数组进行降序排序</span></span><br><span class="line">    qsort(citations, <span class="number">0</span>, <span class="built_in">len</span>(citations) - <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 记录 h 值</span></span><br><span class="line">    num := <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> index, value := <span class="keyword">range</span> citations &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 只要满足引用值 arr[i] 大于 i值</span></span><br><span class="line">        <span class="comment">// 即可求出 h 值</span></span><br><span class="line">        <span class="keyword">if</span> index &lt; value &#123;</span><br><span class="line">            num += <span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> num</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;给定一位研究者论文被引用次数的数组（被引用次数是非负整数）。编写一个方法，计算出研究者的 h 指数。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;h 指数的定义: “h 代表“高引用次数”（high citations）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;一名科研人员的 h 指数是指他（她）的 （N 篇论文中）至多有 h 篇论文分别被引用了至少 h 次。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;（其余的 N - h 篇论文每篇被引用次数不多于 h 次。）”&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;来源：力扣（LeetCode）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;链接：https://leetcode-cn.com/problems/h-index&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="LeetCode" scheme="https://www.chentyit.com/categories/LeetCode/"/>
    
    
      <category term="排序" scheme="https://www.chentyit.com/tags/%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode刷题1122（数组的相对排序）</title>
    <link href="https://www.chentyit.com/2019/07/25/LeetCode%E5%88%B7%E9%A2%981122%EF%BC%88%E6%95%B0%E7%BB%84%E7%9A%84%E7%9B%B8%E5%AF%B9%E6%8E%92%E5%BA%8F%EF%BC%89/"/>
    <id>https://www.chentyit.com/2019/07/25/LeetCode刷题1122（数组的相对排序）/</id>
    <published>2019-07-25T14:01:06.000Z</published>
    <updated>2019-07-27T08:04:13.105Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">给你两个数组，arr1 和 arr2，</span><br><span class="line"></span><br><span class="line">arr2 中的元素各不相同</span><br><span class="line">arr2 中的每个元素都出现在 arr1 中</span><br><span class="line">对 arr1 中的元素进行排序，使 arr1 中项的相对顺序和 arr2 中的相对顺序相同</span><br><span class="line">未在 arr2 中出现过的元素需要按照升序放在 arr1 的末尾</span><br><span class="line"></span><br><span class="line">来源：力扣（LeetCode）</span><br><span class="line">链接：https://leetcode-cn.com/problems/relative-sort-array</span><br><span class="line">著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</span><br></pre></td></tr></table></figure><a id="more"></a><p><strong>示例：</strong></p><blockquote><p>输入：arr1 = [2, 3, 1, 3, 2, 4, 6, 7, 9, 2, 19], arr2 = [2, 1, 4, 3, 9, 6]<br>输出：[2, 2, 2, 1, 4, 3, 3, 9, 6, 7, 19]</p></blockquote><p><strong>思路：</strong></p><ol><li>先将 arr2 中的元素存入到一个 Map 中，值为 key，下标索引为 index，作为排序的标准</li><li>将 arr1 分为两个部分，第一个部分包含 arr2 的元素，第二个部分不包含 arr2 的元素</li><li>将第一个部分按照 Map 中的规则进行排序，第二个部分按照升序排序</li><li>将两个部分的数组拼接起来</li></ol><h2 id="Java-语言实现"><a href="#Java-语言实现" class="headerlink" title="Java 语言实现"></a>Java 语言实现</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 这里使用快速排序（我对快速排序情有独钟，但是之后会尝试一下归并排序）</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@map</span> 这个是思路1中制定好的排序规则，用作排序条件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">qsort</span><span class="params">(Integer[] arr, <span class="keyword">int</span> left, <span class="keyword">int</span> right, Map&lt;Integer, Integer&gt; map)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (left &gt;= right) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> value = arr[left];</span><br><span class="line">        <span class="keyword">int</span> index = left;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = left; i &lt;= right; i++) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 从 map 中取出对应 key 的 value</span></span><br><span class="line">            <span class="comment">// 获得该数值对应的序号</span></span><br><span class="line">            <span class="keyword">if</span> (map.get(value) &gt; map.get(arr[i])) &#123;</span><br><span class="line">                arr[index] = arr[i];</span><br><span class="line">                arr[i] = arr[index + <span class="number">1</span>];</span><br><span class="line">                index++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        arr[index] = value;</span><br><span class="line"></span><br><span class="line">        qsort(arr, left, index - <span class="number">1</span>, map);</span><br><span class="line">        qsort(arr, index + <span class="number">1</span>, right, map);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 解题主体</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] relativeSortArray(<span class="keyword">int</span>[] arr1, <span class="keyword">int</span>[] arr2) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 构建一个 Map 存放排序规则</span></span><br><span class="line">        Map&lt;Integer, Integer&gt; numMap = <span class="keyword">new</span> HashMap&lt;&gt;(<span class="number">16</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr2.length; i++) &#123;</span><br><span class="line">            numMap.put(arr2[i], i);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 两个 list 存放 arr1 分割的两段数据</span></span><br><span class="line">        List&lt;Integer&gt; l1 = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        List&lt;Integer&gt; l2 = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i : arr1) &#123;</span><br><span class="line">            <span class="keyword">if</span> (numMap.containsKey(i)) &#123;</span><br><span class="line">                l1.add(i);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                l2.add(i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 对第一段数据进行快速排序</span></span><br><span class="line">        Integer[] arrbefore = l1.toArray(<span class="keyword">new</span> Integer[l1.size()]);</span><br><span class="line">        qsort(arrbefore, <span class="number">0</span>, arrbefore.length - <span class="number">1</span>, numMap);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将第二段数据放入数组中，进行简单选择排序</span></span><br><span class="line">        Integer[] arrafter = l2.toArray(<span class="keyword">new</span> Integer[l2.size()]);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arrafter.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; arrafter.length; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (arrafter[i] &gt; arrafter[j]) &#123;</span><br><span class="line">                    <span class="keyword">int</span> buf = arrafter[i];</span><br><span class="line">                    arrafter[i] = arrafter[j];</span><br><span class="line">                    arrafter[j] = buf;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建一个新数组存放结果</span></span><br><span class="line">        <span class="keyword">int</span>[] arrResult = <span class="keyword">new</span> <span class="keyword">int</span>[arrbefore.length + arrafter.length];</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 存放第一部分的数值</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arrbefore.length; i++) &#123;</span><br><span class="line">            arrResult[i] = arrbefore[i];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 存放第二部分的数值</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arrafter.length; i++) &#123;</span><br><span class="line">            arrResult[i + arrbefore.length] = arrafter[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> arrResult;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Golang-语言实现"><a href="#Golang-语言实现" class="headerlink" title="Golang 语言实现"></a>Golang 语言实现</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 这里使用快速排序（我对快速排序情有独钟，但是之后会尝试一下归并排序）</span></span><br><span class="line"><span class="comment"> * @numMap 这个是思路1中制定好的排序规则，用作排序条件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">qsort</span><span class="params">(arr []<span class="keyword">int</span>, left, right <span class="keyword">int</span>, numMap <span class="keyword">map</span>[<span class="keyword">int</span>]<span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line">    <span class="keyword">if</span> left &gt;= right &#123;</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    value := arr[left]</span><br><span class="line">    index := left</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i := left; i &lt;= right; i++ &#123;</span><br><span class="line">        <span class="comment">// 从 map 中取出对应 key 的 value</span></span><br><span class="line">        <span class="comment">// 获得该数值对应的序号</span></span><br><span class="line">        <span class="keyword">if</span> numMap[value] &gt; numMap[arr[i]] &#123;</span><br><span class="line">            arr[index] = arr[i]</span><br><span class="line">            arr[i] = arr[index + <span class="number">1</span>]</span><br><span class="line">            index++</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    arr[index] = value</span><br><span class="line"></span><br><span class="line">    qsort(arr, left, index - <span class="number">1</span>, numMap)</span><br><span class="line">    qsort(arr, index + <span class="number">1</span>, right, numMap)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 解题主体</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">relativeSortArray</span><span class="params">(arr1 []<span class="keyword">int</span>, arr2 []<span class="keyword">int</span>)</span> []<span class="title">int</span></span> &#123;</span><br><span class="line">    <span class="comment">// 构建一个 Map 存放排序规则</span></span><br><span class="line">    numMap := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">int</span>]<span class="keyword">int</span>)</span><br><span class="line">    <span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(arr2); i++ &#123;</span><br><span class="line">        numMap[arr2[i]] = i</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 两个数组存放 arr1 分割的两段数据</span></span><br><span class="line">    <span class="keyword">var</span> l1 []<span class="keyword">int</span></span><br><span class="line">    <span class="keyword">var</span> l2 []<span class="keyword">int</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 设置标志位</span></span><br><span class="line">    flag := <span class="literal">false</span></span><br><span class="line">    <span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(arr1); i++ &#123;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 从 map 中找到对应的 key</span></span><br><span class="line">        <span class="comment">// 如果找到就存到 l1 中</span></span><br><span class="line">        <span class="comment">// 没找到就存到 l2 中</span></span><br><span class="line">        <span class="keyword">for</span> key, _ := <span class="keyword">range</span> numMap&#123;</span><br><span class="line">            <span class="keyword">if</span> arr1[i] == key &#123;</span><br><span class="line">                l1 = <span class="built_in">append</span>(l1, arr1[i])</span><br><span class="line">                flag = <span class="literal">true</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> !flag &#123;</span><br><span class="line">            l2 = <span class="built_in">append</span>(l2, arr1[i])</span><br><span class="line">        &#125;</span><br><span class="line">        flag = <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 对 l1 进行快速排序</span></span><br><span class="line">    qsort(l1, <span class="number">0</span>, <span class="built_in">len</span>(l1) - <span class="number">1</span>, numMap)</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 对 l2 进行选择排序</span></span><br><span class="line">    <span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(l2) - <span class="number">1</span>; i++ &#123;</span><br><span class="line">        <span class="keyword">for</span> j := i + <span class="number">1</span>; j &lt; <span class="built_in">len</span>(l2); j++ &#123;</span><br><span class="line">            <span class="keyword">if</span> l2[i] &gt; l2[j] &#123;</span><br><span class="line">                l2[i], l2[j] = l2[j], l2[i]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 合并两个部分的数组（不得不说 golang 操作数组真的方便）</span></span><br><span class="line">    l1 = <span class="built_in">append</span>(l1, l2...)</span><br><span class="line">    <span class="keyword">return</span> l1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;给你两个数组，arr1 和 arr2，&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;arr2 中的元素各不相同&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;arr2 中的每个元素都出现在 arr1 中&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;对 arr1 中的元素进行排序，使 arr1 中项的相对顺序和 arr2 中的相对顺序相同&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;未在 arr2 中出现过的元素需要按照升序放在 arr1 的末尾&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;来源：力扣（LeetCode）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;链接：https://leetcode-cn.com/problems/relative-sort-array&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="LeetCode" scheme="https://www.chentyit.com/categories/LeetCode/"/>
    
    
      <category term="排序" scheme="https://www.chentyit.com/tags/%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode刷题1030（距离顺序排列矩阵单元格）</title>
    <link href="https://www.chentyit.com/2019/07/24/LeetCode%E5%88%B7%E9%A2%981030%EF%BC%88%E8%B7%9D%E7%A6%BB%E9%A1%BA%E5%BA%8F%E6%8E%92%E5%88%97%E7%9F%A9%E9%98%B5%E5%8D%95%E5%85%83%E6%A0%BC%EF%BC%89/"/>
    <id>https://www.chentyit.com/2019/07/24/LeetCode刷题1030（距离顺序排列矩阵单元格）/</id>
    <published>2019-07-24T06:59:58.000Z</published>
    <updated>2019-07-27T08:04:08.020Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">给出 R 行 C 列的矩阵，其中的单元格的整数坐标为 (r, c)，满足 0 &lt;= r &lt; R 且 0 &lt;= c &lt; C。</span><br><span class="line"></span><br><span class="line">另外，我们在该矩阵中给出了一个坐标为 (r0, c0) 的单元格。</span><br><span class="line"></span><br><span class="line">返回矩阵中的所有单元格的坐标，并按到 (r0, c0) 的距离从最小到最大的顺序排，其中</span><br><span class="line">两单元格(r1, c1) 和 (r2, c2) 之间的距离是曼哈顿距离，|r1 - r2| + |c1 - c2|。</span><br><span class="line"></span><br><span class="line">来源：力扣（LeetCode）</span><br><span class="line">链接：https://leetcode-cn.com/problems/matrix-cells-in-distance-order</span><br><span class="line">著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</span><br></pre></td></tr></table></figure><a id="more"></a><p><strong>示例1：</strong></p><blockquote><p>输入：R = 1, C = 2, r0 = 0, c0 = 0<br>输出：[[0,0],[0,1]]<br>解释：从 (r0, c0) 到其他单元格的距离为：[0,1]</p></blockquote><p><strong>示例2：</strong></p><blockquote><p>输入：R = 2, C = 2, r0 = 0, c0 = 1<br>输出：[[0,1],[0,0],[1,1],[1,0]]<br>解释：从 (r0, c0) 到其他单元格的距离为：[0,1,1,2]<br>[[0,1],[1,1],[0,0],[1,0]] 也会被视作正确答案</p></blockquote><p><strong>示例3：</strong></p><blockquote><p>输入：R = 2, C = 3, r0 = 1, c0 = 2<br>输出：[[1,2],[0,2],[1,1],[0,1],[1,0],[0,0]]<br>解释：从 (r0, c0) 到其他单元格的距离为：[0,1,1,2,2,3]<br>其他满足题目要求的答案也会被视为正确，例如 [[1,2],[1,1],[0,2],[1,0],[0,1],[0,0]]</p></blockquote><p><strong>思路：</strong></p><ol><li>用一个<strong>一位数组</strong>存下所有点</li><li>利用快速排序按照<strong>曼哈顿距离</strong>对所有的点进行排序</li></ol><h2 id="Java-语言实现"><a href="#Java-语言实现" class="headerlink" title="Java 语言实现"></a>Java 语言实现</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 快速排序</span></span><br><span class="line"><span class="comment">     * 排序条件是各个点到目标点的距离</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">qsort</span><span class="params">(<span class="keyword">int</span>[][] arr, <span class="keyword">int</span> left, <span class="keyword">int</span> right, <span class="keyword">int</span> r0, <span class="keyword">int</span> c0)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (left &gt;= right) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span>[] value = arr[left];</span><br><span class="line">        <span class="keyword">int</span> index = left;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = left; i &lt;= right; i++) &#123;</span><br><span class="line">            <span class="comment">// 按照各个点到目标点的距离进行排序</span></span><br><span class="line">            <span class="keyword">if</span> (Math.abs(value[<span class="number">0</span>] - r0) + Math.abs(value[<span class="number">1</span>] - c0) &gt;</span><br><span class="line">                    Math.abs(arr[i][<span class="number">0</span>] - r0) + Math.abs(arr[i][<span class="number">1</span>] - c0)) &#123;</span><br><span class="line">                arr[index] = arr[i];</span><br><span class="line">                arr[i] = arr[index + <span class="number">1</span>];</span><br><span class="line">                index++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        arr[index] = value;</span><br><span class="line"></span><br><span class="line">        qsort(arr, left, index - <span class="number">1</span>, r0, c0);</span><br><span class="line">        qsort(arr, index + <span class="number">1</span>, right, r0, c0);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 解题主要方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[][] allCellsDistOrder(<span class="keyword">int</span> R, <span class="keyword">int</span> C, <span class="keyword">int</span> r0, <span class="keyword">int</span> c0) &#123;</span><br><span class="line">        <span class="comment">// 判断所传参数是否满足题目要求</span></span><br><span class="line">        <span class="keyword">if</span> ((R &gt; <span class="number">100</span>) || (R &lt; <span class="number">1</span>) || (C &gt; <span class="number">100</span>) || (C &lt; <span class="number">1</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 利用一个一位数组存放二维坐标</span></span><br><span class="line">        <span class="comment">// 实质上也是一个二维数组</span></span><br><span class="line">        <span class="keyword">int</span>[][] arr = <span class="keyword">new</span> <span class="keyword">int</span>[R * C][];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; R; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; C; j++) &#123;</span><br><span class="line">                <span class="comment">// 创建一个空间存放每个点的坐标</span></span><br><span class="line">                arr[i * C + j] = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">2</span>];</span><br><span class="line">                arr[i * C + j][<span class="number">0</span>] = i;</span><br><span class="line">                arr[i * C + j][<span class="number">1</span>] = j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 进行快速排序</span></span><br><span class="line">        qsort(arr, <span class="number">0</span>, arr.length - <span class="number">1</span>, r0, c0);</span><br><span class="line">        <span class="keyword">return</span> arr;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Golang-语言实现"><a href="#Golang-语言实现" class="headerlink" title="Golang 语言实现"></a>Golang 语言实现</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 快速排序</span></span><br><span class="line"><span class="comment"> * 排序条件是各个点到目标点的距离</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">qsort</span><span class="params">(arr [][]<span class="keyword">int</span>, left, right, r0, c0 <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> left &gt;= right &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">value := arr[left]</span><br><span class="line">index := left</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := left; i &lt;= right; i++ &#123;</span><br><span class="line">        <span class="comment">// 按照各个点到目标点的距离进行排序</span></span><br><span class="line"><span class="keyword">if</span> math.Abs(<span class="keyword">float64</span>(value[<span class="number">0</span>] - r0)) + math.Abs(<span class="keyword">float64</span>(value[<span class="number">1</span>] - c0)) &gt;</span><br><span class="line">math.Abs(<span class="keyword">float64</span>(arr[i][<span class="number">0</span>] - r0)) + math.Abs(<span class="keyword">float64</span>(arr[i][<span class="number">1</span>] - c0)) &#123;</span><br><span class="line">arr[index] = arr[i]</span><br><span class="line">arr[i] = arr[index + <span class="number">1</span>]</span><br><span class="line">index++</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">arr[index] = value</span><br><span class="line"></span><br><span class="line">qsort(arr, left, index - <span class="number">1</span>, r0, c0)</span><br><span class="line">qsort(arr, index + <span class="number">1</span>, right, r0, c0)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 解题主要方法</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">allCellsDistOrder</span><span class="params">(R <span class="keyword">int</span>, C <span class="keyword">int</span>, r0 <span class="keyword">int</span>, c0 <span class="keyword">int</span>)</span> [][]<span class="title">int</span></span> &#123;</span><br><span class="line">    <span class="comment">// 判断所传参数是否满足题目要求</span></span><br><span class="line">    <span class="keyword">if</span> R &gt; <span class="number">100</span> || R &lt; <span class="number">1</span> || C &gt; <span class="number">100</span> || C &lt; <span class="number">1</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">// 利用一个一位数组存放二维坐标</span></span><br><span class="line"><span class="comment">// 实质上也是一个二维数组</span></span><br><span class="line">    result := <span class="built_in">make</span>([][]<span class="keyword">int</span>, R * C)</span><br><span class="line">    <span class="keyword">for</span> i := <span class="number">0</span>; i &lt; R; i++ &#123;</span><br><span class="line">        <span class="keyword">for</span> j := <span class="number">0</span>; j &lt; C; j++ &#123;</span><br><span class="line">            <span class="comment">// 创建一个空间存放每个点的坐标</span></span><br><span class="line">            result[i * C + j] = <span class="built_in">make</span>([]<span class="keyword">int</span>, <span class="number">2</span>)</span><br><span class="line">            result[i * C + j][<span class="number">0</span>] = i</span><br><span class="line">            result[i * C + j][<span class="number">1</span>] = j</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 进行快速排序</span></span><br><span class="line">    qsort(result, <span class="number">0</span>, <span class="built_in">len</span>(result) - <span class="number">1</span>, r0, c0)</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;给出 R 行 C 列的矩阵，其中的单元格的整数坐标为 (r, c)，满足 0 &amp;lt;= r &amp;lt; R 且 0 &amp;lt;= c &amp;lt; C。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;另外，我们在该矩阵中给出了一个坐标为 (r0, c0) 的单元格。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;返回矩阵中的所有单元格的坐标，并按到 (r0, c0) 的距离从最小到最大的顺序排，其中&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;两单元格(r1, c1) 和 (r2, c2) 之间的距离是曼哈顿距离，|r1 - r2| + |c1 - c2|。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;来源：力扣（LeetCode）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;链接：https://leetcode-cn.com/problems/matrix-cells-in-distance-order&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="LeetCode" scheme="https://www.chentyit.com/categories/LeetCode/"/>
    
    
      <category term="排序" scheme="https://www.chentyit.com/tags/%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode刷题976（三角形的最大周长）</title>
    <link href="https://www.chentyit.com/2019/07/23/LeetCode%E5%88%B7%E9%A2%98976%EF%BC%88%E4%B8%89%E8%A7%92%E5%BD%A2%E7%9A%84%E6%9C%80%E5%A4%A7%E5%91%A8%E9%95%BF%EF%BC%89/"/>
    <id>https://www.chentyit.com/2019/07/23/LeetCode刷题976（三角形的最大周长）/</id>
    <published>2019-07-23T11:12:49.000Z</published>
    <updated>2019-07-27T08:03:36.489Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">给定由一些正数（代表长度）组成的数组 A，返回由其中三个长度组成的、面积不为零的三角形的最大周长。</span><br><span class="line"></span><br><span class="line">如果不能形成任何面积不为零的三角形，返回 0。</span><br><span class="line"></span><br><span class="line">来源：力扣（LeetCode）</span><br><span class="line">链接：https://leetcode-cn.com/problems/largest-perimeter-triangle/</span><br><span class="line">著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</span><br></pre></td></tr></table></figure><a id="more"></a><p><strong>示例1：</strong></p><blockquote><p>输入：[2,1,2]<br>输出：5</p></blockquote><p><strong>示例2：</strong></p><blockquote><p>输入：[1,2,1]<br>输出：0</p></blockquote><p><strong>示例3：</strong></p><blockquote><p>输入：[3,2,3,4]<br>输出：10</p></blockquote><p><strong>示例4：</strong></p><blockquote><p>输入：[3,6,2,3]<br>输出：8</p></blockquote><p><strong>思路：</strong></p><ol><li>理清楚三角形特点，两边之和大于第三边 <code>A1 + A2 &gt; A3</code>，两边之差小于第三边 <code>|A1 - A2| &lt; A3</code></li><li>根据思路1可以得到在有序数组中，某一元素大于前两项之和即可</li><li>排序得到有序数组（升序降序随意）</li><li>根据思路 1 和 2 得到最大周长</li></ol><h2 id="Java-语言实现"><a href="#Java-语言实现" class="headerlink" title="Java 语言实现"></a>Java 语言实现</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 这里使用的是快速排序</span></span><br><span class="line"><span class="comment">     * 具体说明就不详细写了，单独起新博客写</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">qsort</span><span class="params">(<span class="keyword">int</span>[] arr, <span class="keyword">int</span> left, <span class="keyword">int</span> right)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (left &gt;= right) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> value = arr[left];</span><br><span class="line">        <span class="keyword">int</span> index = left;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = left; i &lt;= right; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (value &gt; arr[i]) &#123;</span><br><span class="line">                arr[index] = arr[i];</span><br><span class="line">                arr[i] = arr[index + <span class="number">1</span>];</span><br><span class="line">                index++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        arr[index] = value;</span><br><span class="line"></span><br><span class="line">        qsort(arr, left, index - <span class="number">1</span>);</span><br><span class="line">        qsort(arr, index + <span class="number">1</span>, right);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 求出满足三角形条件的最大周长</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">largestPerimeter</span><span class="params">(<span class="keyword">int</span>[] A)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 判断所给的数组长度是否满足 3 条边</span></span><br><span class="line">        <span class="keyword">if</span> (A.length &lt; <span class="number">3</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 快速排序获得一个升序数组</span></span><br><span class="line">        qsort(A, <span class="number">0</span>, A.length - <span class="number">1</span>);</span><br><span class="line">        <span class="comment">// 设定一个最大值</span></span><br><span class="line">        <span class="keyword">int</span> max = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// 开始计算最大值</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; A.length; i++) &#123;</span><br><span class="line">            <span class="comment">// 计算出满足两边之和大于第三边的最大周长</span></span><br><span class="line">            <span class="keyword">if</span> ((A[i] &lt; (A[i - <span class="number">1</span>] + A[i - <span class="number">2</span>])) &amp;&amp; (max &lt; A[i] + A[i - <span class="number">1</span>] + A[i - <span class="number">2</span>])) &#123;</span><br><span class="line">                max = A[i] + A[i - <span class="number">1</span>] + A[i - <span class="number">2</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 返回最大周长</span></span><br><span class="line">        <span class="keyword">return</span> max;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Golang-语言实现"><a href="#Golang-语言实现" class="headerlink" title="Golang 语言实现"></a>Golang 语言实现</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 这里使用的是快速排序</span></span><br><span class="line"><span class="comment"> * 具体说明就不详细写了，单独起新博客写</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">qsort</span><span class="params">(arr []<span class="keyword">int</span>, left, right <span class="keyword">int</span>)</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> left &gt;= right &#123;</span><br><span class="line"><span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">value := arr[left]</span><br><span class="line">index := left</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i := left; i &lt;= right; i++ &#123;</span><br><span class="line"><span class="keyword">if</span> value &gt; arr[i] &#123;</span><br><span class="line">arr[index] = arr[i]</span><br><span class="line">arr[i] = arr[index + <span class="number">1</span>]</span><br><span class="line">index++</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">arr[index] = value</span><br><span class="line"></span><br><span class="line">qsort(arr, left, index - <span class="number">1</span>)</span><br><span class="line">qsort(arr, index + <span class="number">1</span>, right)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 求出满足三角形条件的最大周长</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">largestPerimeter</span><span class="params">(A []<span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">    <span class="comment">// 判断所给的数组长度是否满足 3 条边</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(A) &lt; <span class="number">3</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">// 快速排序获得一个升序数组</span></span><br><span class="line">qsort(A, <span class="number">0</span>, <span class="built_in">len</span>(A) - <span class="number">1</span>)</span><br><span class="line">    <span class="comment">// 设定一个最大值</span></span><br><span class="line">max := <span class="number">0</span></span><br><span class="line">    <span class="comment">// 开始计算最大值</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">2</span>; i &lt; <span class="built_in">len</span>(A); i++ &#123;</span><br><span class="line">        <span class="comment">// 计算出满足两边之和大于第三边的最大周长</span></span><br><span class="line"><span class="keyword">if</span> (A[i] &lt; (A[i<span class="number">-1</span>] + A[i<span class="number">-2</span>])) &amp;&amp; (A[i] + A[i - <span class="number">1</span>] + A[i - <span class="number">2</span>] &gt; max) &#123;</span><br><span class="line">max = A[i] + A[i - <span class="number">1</span>] + A[i - <span class="number">2</span>]</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">// 返回最大周长</span></span><br><span class="line"><span class="keyword">return</span> max</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;给定由一些正数（代表长度）组成的数组 A，返回由其中三个长度组成的、面积不为零的三角形的最大周长。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;如果不能形成任何面积不为零的三角形，返回 0。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;来源：力扣（LeetCode）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;链接：https://leetcode-cn.com/problems/largest-perimeter-triangle/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="LeetCode" scheme="https://www.chentyit.com/categories/LeetCode/"/>
    
    
      <category term="排序" scheme="https://www.chentyit.com/tags/%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode刷题922（按奇偶排序数组 II）</title>
    <link href="https://www.chentyit.com/2019/07/23/LeetCode%E5%88%B7%E9%A2%98922%EF%BC%88%E6%8C%89%E5%A5%87%E5%81%B6%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%20II%EF%BC%89/"/>
    <id>https://www.chentyit.com/2019/07/23/LeetCode刷题922（按奇偶排序数组 II）/</id>
    <published>2019-07-23T11:02:05.000Z</published>
    <updated>2019-07-27T08:03:30.910Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">给定一个非负整数数组 A， A 中一半整数是奇数，一半整数是偶数。</span><br><span class="line"></span><br><span class="line">对数组进行排序，以便当 A[i] 为奇数时，i 也是奇数；当 A[i] 为偶数时， i 也是偶数。</span><br><span class="line"></span><br><span class="line">你可以返回任何满足上述条件的数组作为答案。</span><br><span class="line"></span><br><span class="line">来源：力扣（LeetCode）</span><br><span class="line">链接：https://leetcode-cn.com/problems/sort-array-by-parity-ii</span><br><span class="line">著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。</span><br></pre></td></tr></table></figure><a id="more"></a><p><strong>示例：</strong></p><blockquote><p>输入：[4, 2, 5, 7]<br>输出：[4, 5, 2, 7]<br>解释：[4, 7, 2, 5]，[2, 5, 4, 7]，[2, 7, 4, 5] 也会被接受。</p></blockquote><p><strong>思路：</strong></p><ol><li>设置奇偶指针指向奇偶位</li><li>如果满足奇偶数条件，指针加 2，不满足，两个指针位互换</li></ol><h2 id="Java-语言实现"><a href="#Java-语言实现" class="headerlink" title="Java 语言实现"></a>Java 语言实现</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span>[] sortArrayByParityII(<span class="keyword">int</span>[] A) &#123;</span><br><span class="line">        <span class="comment">// 设置奇数指针</span></span><br><span class="line">        <span class="keyword">int</span> even = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// 设置偶数指针</span></span><br><span class="line">        <span class="keyword">int</span> odd = <span class="number">1</span>;</span><br><span class="line">        <span class="comment">// 开始循环判断</span></span><br><span class="line">        <span class="keyword">while</span> (even &lt; A.length &amp;&amp; odd &lt; A.length) &#123;</span><br><span class="line">            <span class="comment">// 判断是否满足偶数条件</span></span><br><span class="line">            <span class="keyword">if</span> (A[even] % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                even += <span class="number">2</span>;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 判断是否满足奇数条件</span></span><br><span class="line">            <span class="keyword">if</span> (A[odd] % <span class="number">2</span> != <span class="number">0</span>) &#123;</span><br><span class="line">                odd += <span class="number">2</span>;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 不满足以上条件就交换两个指针的值</span></span><br><span class="line">            <span class="keyword">int</span> buf = A[even];</span><br><span class="line">            A[even] = A[odd];</span><br><span class="line">            A[odd] = buf;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> A;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Golang-语言实现"><a href="#Golang-语言实现" class="headerlink" title="Golang 语言实现"></a>Golang 语言实现</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">sortArrayByParityII</span><span class="params">(A []<span class="keyword">int</span>)</span> []<span class="title">int</span></span> &#123;</span><br><span class="line">    <span class="comment">// 设置奇数指针</span></span><br><span class="line">even := <span class="number">0</span></span><br><span class="line">    <span class="comment">// 设置偶数指针</span></span><br><span class="line">odd := <span class="number">1</span></span><br><span class="line">    <span class="comment">// 开始循环判断</span></span><br><span class="line"><span class="keyword">for</span> even &lt; <span class="built_in">len</span>(A) &amp;&amp; odd &lt; <span class="built_in">len</span>(A) &#123;</span><br><span class="line">        <span class="comment">// 判断是否满足偶数条件</span></span><br><span class="line">        <span class="keyword">if</span> A[even]%<span class="number">2</span> == <span class="number">0</span> &#123;</span><br><span class="line">            even += <span class="number">2</span></span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 判断是否满足奇数条件</span></span><br><span class="line">        <span class="keyword">if</span> A[odd]%<span class="number">2</span> != <span class="number">0</span> &#123;</span><br><span class="line">            odd += <span class="number">2</span></span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 不满足以上条件就交换两个指针的值</span></span><br><span class="line">        A[even], A[odd] = A[odd], A[even]</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> A</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;给定一个非负整数数组 A， A 中一半整数是奇数，一半整数是偶数。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;对数组进行排序，以便当 A[i] 为奇数时，i 也是奇数；当 A[i] 为偶数时， i 也是偶数。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;你可以返回任何满足上述条件的数组作为答案。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;来源：力扣（LeetCode）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;链接：https://leetcode-cn.com/problems/sort-array-by-parity-ii&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="LeetCode" scheme="https://www.chentyit.com/categories/LeetCode/"/>
    
    
      <category term="排序" scheme="https://www.chentyit.com/tags/%E6%8E%92%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>C++复制构造函数</title>
    <link href="https://www.chentyit.com/2019/07/19/C-%E5%A4%8D%E5%88%B6%E6%9E%84%E9%80%A0%E5%87%BD%E6%95%B0/"/>
    <id>https://www.chentyit.com/2019/07/19/C-复制构造函数/</id>
    <published>2019-07-19T10:49:26.000Z</published>
    <updated>2019-07-19T10:54:18.318Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> &#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">int</span> value;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">A(<span class="keyword">int</span> n) &#123;</span><br><span class="line">value = n;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">A(A other) &#123;</span><br><span class="line">value = other.value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Print</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; value &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">A a = <span class="number">10</span>;</span><br><span class="line">A b = a;</span><br><span class="line">b.Print();</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><p>上述代码中，复制构造函数 <code>A(A other)</code> 传入的是 A 的一个实例，由于是传值参数，把形参复制到实参会调用复制构造函数，如果允许复制构造函数传值，就会在复制构造函数内调用复制构造函数，就会形成永久递归，导致栈溢出</p><p><strong>修改方案：</strong>将 <code>A(A other)</code> 修改为 <code>A(const A&amp; other)</code></p>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;meta-string&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;A&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	A(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		value = n;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	A(A other) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		value = other.value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Print&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; value &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	A a = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	A b = a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	b.Print();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="C++" scheme="https://www.chentyit.com/categories/C/"/>
    
    
      <category term="剑指Offer" scheme="https://www.chentyit.com/tags/%E5%89%91%E6%8C%87Offer/"/>
    
  </entry>
  
  <entry>
    <title>C++的sizeof函数</title>
    <link href="https://www.chentyit.com/2019/07/19/C-%E7%9A%84sizeoff%E5%87%BD%E6%95%B0/"/>
    <id>https://www.chentyit.com/2019/07/19/C-的sizeoff函数/</id>
    <published>2019-07-19T10:27:10.000Z</published>
    <updated>2019-07-19T10:46:40.740Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Chen</span> &#123;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">Chen a;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="keyword">sizeof</span>(a) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a><p><strong>定义一个空类型，里面没有任何成员变量和成员函数，对该类型求 sizeof，得到的结果是多少？</strong></p><p>正确答案：1</p><blockquote><p>空类型的实例中不包含任何信息，sizeof 的结果本应该是 0，但声明类型的时候应该在内存中占有一定的空间，否则无法使用，占用大小由编译器决定，在 Visual Studio 中占 1 字节空间</p></blockquote><p><strong>如果在该类型中添加构造函数和析构函数，sizeof 的值是多少</strong></p><p>正确答案：1</p><blockquote><p>调用构造函数和析构函数只需要找到函数在内存中的地址就可以了，函数地址只与类型有关，与类型的实例无关，编译器不会为这两个函数添加信息，所以 sizeof 的值不会改变</p></blockquote><p><strong>如果把析构函数改成虚函数，sizeof 的值是多少</strong></p><p>正确答案：根据计算机来说（32 位机是 4，64 位机是 8）</p><blockquote><p>C++ 编译器中，类型中一旦有虚函数，就会为类型生成虚函数表，并且为每一个实例添加一个指向虚函数表的指针，在 32 位机中，一个指针占 4 字节空间，64 位机中，一个指针占 8 字节空间</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;meta-string&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Chen&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	Chen a;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;keyword&quot;&gt;sizeof&lt;/span&gt;(a) &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="C++" scheme="https://www.chentyit.com/categories/C/"/>
    
    
      <category term="剑指Offer" scheme="https://www.chentyit.com/tags/%E5%89%91%E6%8C%87Offer/"/>
    
  </entry>
  
</feed>
